Terminals unused in grammar

   STATIC
   INSTANCEOF


State 91 conflicts: 1 reduce/reduce


Grammar

    0 $accept: Program $end

    1 Program: DeclList

    2 DeclList: DeclList Decl
    3         | Decl

    4 Decl: VariableDecl
    5     | FunctionDecl
    6     | ClassDecl
    7     | InterfaceDecl

    8 VariableDecl: Variable ';'

    9 Variable: Type Identifier

   10 VariableList: Variable
   11             | VariableList ',' Variable

   12 LValue: Identifier
   13       | Expr '.' Identifier
   14       | Expr '[' Expr ']'

   15 Type: INT
   16     | DOUBLE
   17     | BOOL
   18     | STRING
   19     | Identifier
   20     | Type '[' ']'

   21 Identifier: IDENTIFIER

   22 Formals: %empty
   23        | VariableList

   24 FunctionDecl: Type Identifier '(' Formals ')' StmtBlock
   25             | VOID Identifier '(' Formals ')' StmtBlock

   26 ClassDecl: CLASS Identifier ExtendsClause ImplementsClause '{' FieldList '}'

   27 ExtendsClause: %empty
   28              | EXTENDS Identifier

   29 ImplementsClause: %empty
   30                 | IMPLEMENTS InterfaceList

   31 InterfaceList: Identifier
   32              | InterfaceList ',' Identifier

   33 FieldList: %empty
   34          | FieldList Field

   35 Field: VariableDecl
   36      | FunctionDecl

   37 InterfaceDecl: INTERFACE Identifier '{' PrototypeList '}'

   38 PrototypeList: %empty
   39              | PrototypeList Prototype

   40 Prototype: Type Identifier '(' Formals ')' ';'
   41          | VOID Identifier '(' Formals ')' ';'

   42 StmtBlock: '{' VariableDeclList StmtList '}'

   43 VariableDeclList: %empty
   44                 | VariableDeclList VariableDecl

   45 StmtList: %empty
   46         | Stmt StmtList

   47 Stmt: ';'
   48     | Expr ';'
   49     | IfStmt
   50     | WhileStmt
   51     | ForStmt
   52     | BreakStmt
   53     | ReturnStmt
   54     | PrintStmt
   55     | StmtBlock

   56 ExprList: Expr
   57         | ExprList ',' Expr

   58 IfStmt: IF '(' Expr ')' Stmt
   59       | IF '(' Expr ')' Stmt ELSE Stmt

   60 WhileStmt: WHILE '(' Expr ')' Stmt

   61 ForStmt: FOR '(' ';' Expr ';' ')' Stmt
   62        | FOR '(' Expr ';' Expr ';' ')' Stmt
   63        | FOR '(' ';' Expr ';' Expr ')' Stmt
   64        | FOR '(' Expr ';' Expr ';' Expr ')' Stmt

   65 ReturnStmt: RETURN ';'
   66           | RETURN Expr ';'

   67 BreakStmt: BREAK ';'

   68 PrintStmt: PRINT '(' ExprList ')' ';'

   69 Expr: LValue '=' Expr
   70     | Constant
   71     | LValue
   72     | THIS
   73     | Call
   74     | '(' Expr ')'
   75     | Expr '+' Expr
   76     | Expr '-' Expr
   77     | Expr '*' Expr
   78     | Expr '/' Expr
   79     | Expr '%' Expr
   80     | '-' Expr
   81     | Expr '<' Expr
   82     | Expr LE_OP Expr
   83     | Expr '>' Expr
   84     | Expr GE_OP Expr
   85     | Expr EQ_OP Expr
   86     | Expr NE_OP Expr
   87     | Expr AND_OP Expr
   88     | Expr OR_OP Expr
   89     | NOT_OP Expr
   90     | READINTEGER '(' ')'
   91     | READLINE '(' ')'
   92     | NEW Identifier
   93     | NEWARRAY '(' Expr ',' Type ')'

   94 Call: Identifier '(' Actuals ')'
   95     | Expr '.' Identifier '(' Actuals ')'

   96 Actuals: %empty
   97        | ExprList

   98 Constant: INTCONSTANT
   99         | DOUBLECONSTANT
  100         | BOOLCONSTANT
  101         | STRING_LITERAL
  102         | NULLCONSTANT


Terminals, with rules where they appear

$end (0) 0
'%' (37) 79
'(' (40) 24 25 40 41 58 59 60 61 62 63 64 68 74 90 91 93 94 95
')' (41) 24 25 40 41 58 59 60 61 62 63 64 68 74 90 91 93 94 95
'*' (42) 77
'+' (43) 75
',' (44) 11 32 57 93
'-' (45) 76 80
'.' (46) 13 95
'/' (47) 78
';' (59) 8 40 41 47 48 61 62 63 64 65 66 67 68
'<' (60) 81
'=' (61) 69
'>' (62) 83
'[' (91) 14 20
']' (93) 14 20
'{' (123) 26 37 42
'}' (125) 26 37 42
error (256)
INT (258) 15
DOUBLE (259) 16
BOOL (260) 17
STRING (261) 18
VOID (262) 25 41
NULLCONSTANT (263) 102
BREAK (264) 67
CLASS (265) 26
ELSE (266) 59
EXTENDS (267) 28
FOR (268) 61 62 63 64
IF (269) 58 59
NEW (270) 92
RETURN (271) 65 66
THIS (272) 72
WHILE (273) 60
STATIC (274)
PRINT (275) 68
READINTEGER (276) 90
READLINE (277) 91
INSTANCEOF (278)
NEWARRAY (279) 93
IMPLEMENTS (280) 30
INTERFACE (281) 37
LE_OP (282) 82
GE_OP (283) 84
EQ_OP (284) 85
NE_OP (285) 86
AND_OP (286) 87
OR_OP (287) 88
NOT_OP (288) 89
IDENTIFIER (289) 21
STRING_LITERAL (290) 101
INTCONSTANT (291) 98
DOUBLECONSTANT (292) 99
BOOLCONSTANT (293) 100
UMINUS (294)
NOELSE (295)


Nonterminals, with rules where they appear

$accept (58)
    on left: 0
Program (59)
    on left: 1, on right: 0
DeclList (60)
    on left: 2 3, on right: 1 2
Decl (61)
    on left: 4 5 6 7, on right: 2 3
VariableDecl (62)
    on left: 8, on right: 4 35 44
Variable (63)
    on left: 9, on right: 8 10 11
VariableList (64)
    on left: 10 11, on right: 11 23
LValue (65)
    on left: 12 13 14, on right: 69 71
Type (66)
    on left: 15 16 17 18 19 20, on right: 9 20 24 40 93
Identifier (67)
    on left: 21, on right: 9 12 13 19 24 25 26 28 31 32 37 40 41 92
    94 95
Formals (68)
    on left: 22 23, on right: 24 25 40 41
FunctionDecl (69)
    on left: 24 25, on right: 5 36
ClassDecl (70)
    on left: 26, on right: 6
ExtendsClause (71)
    on left: 27 28, on right: 26
ImplementsClause (72)
    on left: 29 30, on right: 26
InterfaceList (73)
    on left: 31 32, on right: 30 32
FieldList (74)
    on left: 33 34, on right: 26 34
Field (75)
    on left: 35 36, on right: 34
InterfaceDecl (76)
    on left: 37, on right: 7
PrototypeList (77)
    on left: 38 39, on right: 37 39
Prototype (78)
    on left: 40 41, on right: 39
StmtBlock (79)
    on left: 42, on right: 24 25 55
VariableDeclList (80)
    on left: 43 44, on right: 42 44
StmtList (81)
    on left: 45 46, on right: 42 46
Stmt (82)
    on left: 47 48 49 50 51 52 53 54 55, on right: 46 58 59 60 61 62
    63 64
ExprList (83)
    on left: 56 57, on right: 57 68 97
IfStmt (84)
    on left: 58 59, on right: 49
WhileStmt (85)
    on left: 60, on right: 50
ForStmt (86)
    on left: 61 62 63 64, on right: 51
ReturnStmt (87)
    on left: 65 66, on right: 53
BreakStmt (88)
    on left: 67, on right: 52
PrintStmt (89)
    on left: 68, on right: 54
Expr (90)
    on left: 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86
    87 88 89 90 91 92 93, on right: 13 14 48 56 57 58 59 60 61 62 63
    64 66 69 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 93 95
Call (91)
    on left: 94 95, on right: 73
Actuals (92)
    on left: 96 97, on right: 94 95
Constant (93)
    on left: 98 99 100 101 102, on right: 70


State 0

    0 $accept: . Program $end

    INT         shift, and go to state 1
    DOUBLE      shift, and go to state 2
    BOOL        shift, and go to state 3
    STRING      shift, and go to state 4
    VOID        shift, and go to state 5
    CLASS       shift, and go to state 6
    INTERFACE   shift, and go to state 7
    IDENTIFIER  shift, and go to state 8

    Program        go to state 9
    DeclList       go to state 10
    Decl           go to state 11
    VariableDecl   go to state 12
    Variable       go to state 13
    Type           go to state 14
    Identifier     go to state 15
    FunctionDecl   go to state 16
    ClassDecl      go to state 17
    InterfaceDecl  go to state 18


State 1

   15 Type: INT .

    $default  reduce using rule 15 (Type)


State 2

   16 Type: DOUBLE .

    $default  reduce using rule 16 (Type)


State 3

   17 Type: BOOL .

    $default  reduce using rule 17 (Type)


State 4

   18 Type: STRING .

    $default  reduce using rule 18 (Type)


State 5

   25 FunctionDecl: VOID . Identifier '(' Formals ')' StmtBlock

    IDENTIFIER  shift, and go to state 8

    Identifier  go to state 19


State 6

   26 ClassDecl: CLASS . Identifier ExtendsClause ImplementsClause '{' FieldList '}'

    IDENTIFIER  shift, and go to state 8

    Identifier  go to state 20


State 7

   37 InterfaceDecl: INTERFACE . Identifier '{' PrototypeList '}'

    IDENTIFIER  shift, and go to state 8

    Identifier  go to state 21


State 8

   21 Identifier: IDENTIFIER .

    $default  reduce using rule 21 (Identifier)


State 9

    0 $accept: Program . $end

    $end  shift, and go to state 22


State 10

    1 Program: DeclList .
    2 DeclList: DeclList . Decl

    INT         shift, and go to state 1
    DOUBLE      shift, and go to state 2
    BOOL        shift, and go to state 3
    STRING      shift, and go to state 4
    VOID        shift, and go to state 5
    CLASS       shift, and go to state 6
    INTERFACE   shift, and go to state 7
    IDENTIFIER  shift, and go to state 8

    $default  reduce using rule 1 (Program)

    Decl           go to state 23
    VariableDecl   go to state 12
    Variable       go to state 13
    Type           go to state 14
    Identifier     go to state 15
    FunctionDecl   go to state 16
    ClassDecl      go to state 17
    InterfaceDecl  go to state 18


State 11

    3 DeclList: Decl .

    $default  reduce using rule 3 (DeclList)


State 12

    4 Decl: VariableDecl .

    $default  reduce using rule 4 (Decl)


State 13

    8 VariableDecl: Variable . ';'

    ';'  shift, and go to state 24


State 14

    9 Variable: Type . Identifier
   20 Type: Type . '[' ']'
   24 FunctionDecl: Type . Identifier '(' Formals ')' StmtBlock

    IDENTIFIER  shift, and go to state 8
    '['         shift, and go to state 25

    Identifier  go to state 26


State 15

   19 Type: Identifier .

    $default  reduce using rule 19 (Type)


State 16

    5 Decl: FunctionDecl .

    $default  reduce using rule 5 (Decl)


State 17

    6 Decl: ClassDecl .

    $default  reduce using rule 6 (Decl)


State 18

    7 Decl: InterfaceDecl .

    $default  reduce using rule 7 (Decl)


State 19

   25 FunctionDecl: VOID Identifier . '(' Formals ')' StmtBlock

    '('  shift, and go to state 27


State 20

   26 ClassDecl: CLASS Identifier . ExtendsClause ImplementsClause '{' FieldList '}'

    EXTENDS  shift, and go to state 28

    $default  reduce using rule 27 (ExtendsClause)

    ExtendsClause  go to state 29


State 21

   37 InterfaceDecl: INTERFACE Identifier . '{' PrototypeList '}'

    '{'  shift, and go to state 30


State 22

    0 $accept: Program $end .

    $default  accept


State 23

    2 DeclList: DeclList Decl .

    $default  reduce using rule 2 (DeclList)


State 24

    8 VariableDecl: Variable ';' .

    $default  reduce using rule 8 (VariableDecl)


State 25

   20 Type: Type '[' . ']'

    ']'  shift, and go to state 31


State 26

    9 Variable: Type Identifier .
   24 FunctionDecl: Type Identifier . '(' Formals ')' StmtBlock

    '('  shift, and go to state 32

    $default  reduce using rule 9 (Variable)


State 27

   25 FunctionDecl: VOID Identifier '(' . Formals ')' StmtBlock

    INT         shift, and go to state 1
    DOUBLE      shift, and go to state 2
    BOOL        shift, and go to state 3
    STRING      shift, and go to state 4
    IDENTIFIER  shift, and go to state 8

    $default  reduce using rule 22 (Formals)

    Variable      go to state 33
    VariableList  go to state 34
    Type          go to state 35
    Identifier    go to state 15
    Formals       go to state 36


State 28

   28 ExtendsClause: EXTENDS . Identifier

    IDENTIFIER  shift, and go to state 8

    Identifier  go to state 37


State 29

   26 ClassDecl: CLASS Identifier ExtendsClause . ImplementsClause '{' FieldList '}'

    IMPLEMENTS  shift, and go to state 38

    $default  reduce using rule 29 (ImplementsClause)

    ImplementsClause  go to state 39


State 30

   37 InterfaceDecl: INTERFACE Identifier '{' . PrototypeList '}'

    $default  reduce using rule 38 (PrototypeList)

    PrototypeList  go to state 40


State 31

   20 Type: Type '[' ']' .

    $default  reduce using rule 20 (Type)


State 32

   24 FunctionDecl: Type Identifier '(' . Formals ')' StmtBlock

    INT         shift, and go to state 1
    DOUBLE      shift, and go to state 2
    BOOL        shift, and go to state 3
    STRING      shift, and go to state 4
    IDENTIFIER  shift, and go to state 8

    $default  reduce using rule 22 (Formals)

    Variable      go to state 33
    VariableList  go to state 34
    Type          go to state 35
    Identifier    go to state 15
    Formals       go to state 41


State 33

   10 VariableList: Variable .

    $default  reduce using rule 10 (VariableList)


State 34

   11 VariableList: VariableList . ',' Variable
   23 Formals: VariableList .

    ','  shift, and go to state 42

    $default  reduce using rule 23 (Formals)


State 35

    9 Variable: Type . Identifier
   20 Type: Type . '[' ']'

    IDENTIFIER  shift, and go to state 8
    '['         shift, and go to state 25

    Identifier  go to state 43


State 36

   25 FunctionDecl: VOID Identifier '(' Formals . ')' StmtBlock

    ')'  shift, and go to state 44


State 37

   28 ExtendsClause: EXTENDS Identifier .

    $default  reduce using rule 28 (ExtendsClause)


State 38

   30 ImplementsClause: IMPLEMENTS . InterfaceList

    IDENTIFIER  shift, and go to state 8

    Identifier     go to state 45
    InterfaceList  go to state 46


State 39

   26 ClassDecl: CLASS Identifier ExtendsClause ImplementsClause . '{' FieldList '}'

    '{'  shift, and go to state 47


State 40

   37 InterfaceDecl: INTERFACE Identifier '{' PrototypeList . '}'
   39 PrototypeList: PrototypeList . Prototype

    INT         shift, and go to state 1
    DOUBLE      shift, and go to state 2
    BOOL        shift, and go to state 3
    STRING      shift, and go to state 4
    VOID        shift, and go to state 48
    IDENTIFIER  shift, and go to state 8
    '}'         shift, and go to state 49

    Type        go to state 50
    Identifier  go to state 15
    Prototype   go to state 51


State 41

   24 FunctionDecl: Type Identifier '(' Formals . ')' StmtBlock

    ')'  shift, and go to state 52


State 42

   11 VariableList: VariableList ',' . Variable

    INT         shift, and go to state 1
    DOUBLE      shift, and go to state 2
    BOOL        shift, and go to state 3
    STRING      shift, and go to state 4
    IDENTIFIER  shift, and go to state 8

    Variable    go to state 53
    Type        go to state 35
    Identifier  go to state 15


State 43

    9 Variable: Type Identifier .

    $default  reduce using rule 9 (Variable)


State 44

   25 FunctionDecl: VOID Identifier '(' Formals ')' . StmtBlock

    '{'  shift, and go to state 54

    StmtBlock  go to state 55


State 45

   31 InterfaceList: Identifier .

    $default  reduce using rule 31 (InterfaceList)


State 46

   30 ImplementsClause: IMPLEMENTS InterfaceList .
   32 InterfaceList: InterfaceList . ',' Identifier

    ','  shift, and go to state 56

    $default  reduce using rule 30 (ImplementsClause)


State 47

   26 ClassDecl: CLASS Identifier ExtendsClause ImplementsClause '{' . FieldList '}'

    $default  reduce using rule 33 (FieldList)

    FieldList  go to state 57


State 48

   41 Prototype: VOID . Identifier '(' Formals ')' ';'

    IDENTIFIER  shift, and go to state 8

    Identifier  go to state 58


State 49

   37 InterfaceDecl: INTERFACE Identifier '{' PrototypeList '}' .

    $default  reduce using rule 37 (InterfaceDecl)


State 50

   20 Type: Type . '[' ']'
   40 Prototype: Type . Identifier '(' Formals ')' ';'

    IDENTIFIER  shift, and go to state 8
    '['         shift, and go to state 25

    Identifier  go to state 59


State 51

   39 PrototypeList: PrototypeList Prototype .

    $default  reduce using rule 39 (PrototypeList)


State 52

   24 FunctionDecl: Type Identifier '(' Formals ')' . StmtBlock

    '{'  shift, and go to state 54

    StmtBlock  go to state 60


State 53

   11 VariableList: VariableList ',' Variable .

    $default  reduce using rule 11 (VariableList)


State 54

   42 StmtBlock: '{' . VariableDeclList StmtList '}'

    $default  reduce using rule 43 (VariableDeclList)

    VariableDeclList  go to state 61


State 55

   25 FunctionDecl: VOID Identifier '(' Formals ')' StmtBlock .

    $default  reduce using rule 25 (FunctionDecl)


State 56

   32 InterfaceList: InterfaceList ',' . Identifier

    IDENTIFIER  shift, and go to state 8

    Identifier  go to state 62


State 57

   26 ClassDecl: CLASS Identifier ExtendsClause ImplementsClause '{' FieldList . '}'
   34 FieldList: FieldList . Field

    INT         shift, and go to state 1
    DOUBLE      shift, and go to state 2
    BOOL        shift, and go to state 3
    STRING      shift, and go to state 4
    VOID        shift, and go to state 5
    IDENTIFIER  shift, and go to state 8
    '}'         shift, and go to state 63

    VariableDecl  go to state 64
    Variable      go to state 13
    Type          go to state 14
    Identifier    go to state 15
    FunctionDecl  go to state 65
    Field         go to state 66


State 58

   41 Prototype: VOID Identifier . '(' Formals ')' ';'

    '('  shift, and go to state 67


State 59

   40 Prototype: Type Identifier . '(' Formals ')' ';'

    '('  shift, and go to state 68


State 60

   24 FunctionDecl: Type Identifier '(' Formals ')' StmtBlock .

    $default  reduce using rule 24 (FunctionDecl)


State 61

   42 StmtBlock: '{' VariableDeclList . StmtList '}'
   44 VariableDeclList: VariableDeclList . VariableDecl

    INT             shift, and go to state 1
    DOUBLE          shift, and go to state 2
    BOOL            shift, and go to state 3
    STRING          shift, and go to state 4
    NULLCONSTANT    shift, and go to state 69
    BREAK           shift, and go to state 70
    FOR             shift, and go to state 71
    IF              shift, and go to state 72
    NEW             shift, and go to state 73
    RETURN          shift, and go to state 74
    THIS            shift, and go to state 75
    WHILE           shift, and go to state 76
    PRINT           shift, and go to state 77
    READINTEGER     shift, and go to state 78
    READLINE        shift, and go to state 79
    NEWARRAY        shift, and go to state 80
    NOT_OP          shift, and go to state 81
    IDENTIFIER      shift, and go to state 8
    STRING_LITERAL  shift, and go to state 82
    INTCONSTANT     shift, and go to state 83
    DOUBLECONSTANT  shift, and go to state 84
    BOOLCONSTANT    shift, and go to state 85
    '-'             shift, and go to state 86
    ';'             shift, and go to state 87
    '('             shift, and go to state 88
    '{'             shift, and go to state 54

    $default  reduce using rule 45 (StmtList)

    VariableDecl  go to state 89
    Variable      go to state 13
    LValue        go to state 90
    Type          go to state 35
    Identifier    go to state 91
    StmtBlock     go to state 92
    StmtList      go to state 93
    Stmt          go to state 94
    IfStmt        go to state 95
    WhileStmt     go to state 96
    ForStmt       go to state 97
    ReturnStmt    go to state 98
    BreakStmt     go to state 99
    PrintStmt     go to state 100
    Expr          go to state 101
    Call          go to state 102
    Constant      go to state 103


State 62

   32 InterfaceList: InterfaceList ',' Identifier .

    $default  reduce using rule 32 (InterfaceList)


State 63

   26 ClassDecl: CLASS Identifier ExtendsClause ImplementsClause '{' FieldList '}' .

    $default  reduce using rule 26 (ClassDecl)


State 64

   35 Field: VariableDecl .

    $default  reduce using rule 35 (Field)


State 65

   36 Field: FunctionDecl .

    $default  reduce using rule 36 (Field)


State 66

   34 FieldList: FieldList Field .

    $default  reduce using rule 34 (FieldList)


State 67

   41 Prototype: VOID Identifier '(' . Formals ')' ';'

    INT         shift, and go to state 1
    DOUBLE      shift, and go to state 2
    BOOL        shift, and go to state 3
    STRING      shift, and go to state 4
    IDENTIFIER  shift, and go to state 8

    $default  reduce using rule 22 (Formals)

    Variable      go to state 33
    VariableList  go to state 34
    Type          go to state 35
    Identifier    go to state 15
    Formals       go to state 104


State 68

   40 Prototype: Type Identifier '(' . Formals ')' ';'

    INT         shift, and go to state 1
    DOUBLE      shift, and go to state 2
    BOOL        shift, and go to state 3
    STRING      shift, and go to state 4
    IDENTIFIER  shift, and go to state 8

    $default  reduce using rule 22 (Formals)

    Variable      go to state 33
    VariableList  go to state 34
    Type          go to state 35
    Identifier    go to state 15
    Formals       go to state 105


State 69

  102 Constant: NULLCONSTANT .

    $default  reduce using rule 102 (Constant)


State 70

   67 BreakStmt: BREAK . ';'

    ';'  shift, and go to state 106


State 71

   61 ForStmt: FOR . '(' ';' Expr ';' ')' Stmt
   62        | FOR . '(' Expr ';' Expr ';' ')' Stmt
   63        | FOR . '(' ';' Expr ';' Expr ')' Stmt
   64        | FOR . '(' Expr ';' Expr ';' Expr ')' Stmt

    '('  shift, and go to state 107


State 72

   58 IfStmt: IF . '(' Expr ')' Stmt
   59       | IF . '(' Expr ')' Stmt ELSE Stmt

    '('  shift, and go to state 108


State 73

   92 Expr: NEW . Identifier

    IDENTIFIER  shift, and go to state 8

    Identifier  go to state 109


State 74

   65 ReturnStmt: RETURN . ';'
   66           | RETURN . Expr ';'

    NULLCONSTANT    shift, and go to state 69
    NEW             shift, and go to state 73
    THIS            shift, and go to state 75
    READINTEGER     shift, and go to state 78
    READLINE        shift, and go to state 79
    NEWARRAY        shift, and go to state 80
    NOT_OP          shift, and go to state 81
    IDENTIFIER      shift, and go to state 8
    STRING_LITERAL  shift, and go to state 82
    INTCONSTANT     shift, and go to state 83
    DOUBLECONSTANT  shift, and go to state 84
    BOOLCONSTANT    shift, and go to state 85
    '-'             shift, and go to state 86
    ';'             shift, and go to state 110
    '('             shift, and go to state 88

    LValue      go to state 90
    Identifier  go to state 111
    Expr        go to state 112
    Call        go to state 102
    Constant    go to state 103


State 75

   72 Expr: THIS .

    $default  reduce using rule 72 (Expr)


State 76

   60 WhileStmt: WHILE . '(' Expr ')' Stmt

    '('  shift, and go to state 113


State 77

   68 PrintStmt: PRINT . '(' ExprList ')' ';'

    '('  shift, and go to state 114


State 78

   90 Expr: READINTEGER . '(' ')'

    '('  shift, and go to state 115


State 79

   91 Expr: READLINE . '(' ')'

    '('  shift, and go to state 116


State 80

   93 Expr: NEWARRAY . '(' Expr ',' Type ')'

    '('  shift, and go to state 117


State 81

   89 Expr: NOT_OP . Expr

    NULLCONSTANT    shift, and go to state 69
    NEW             shift, and go to state 73
    THIS            shift, and go to state 75
    READINTEGER     shift, and go to state 78
    READLINE        shift, and go to state 79
    NEWARRAY        shift, and go to state 80
    NOT_OP          shift, and go to state 81
    IDENTIFIER      shift, and go to state 8
    STRING_LITERAL  shift, and go to state 82
    INTCONSTANT     shift, and go to state 83
    DOUBLECONSTANT  shift, and go to state 84
    BOOLCONSTANT    shift, and go to state 85
    '-'             shift, and go to state 86
    '('             shift, and go to state 88

    LValue      go to state 90
    Identifier  go to state 111
    Expr        go to state 118
    Call        go to state 102
    Constant    go to state 103


State 82

  101 Constant: STRING_LITERAL .

    $default  reduce using rule 101 (Constant)


State 83

   98 Constant: INTCONSTANT .

    $default  reduce using rule 98 (Constant)


State 84

   99 Constant: DOUBLECONSTANT .

    $default  reduce using rule 99 (Constant)


State 85

  100 Constant: BOOLCONSTANT .

    $default  reduce using rule 100 (Constant)


State 86

   80 Expr: '-' . Expr

    NULLCONSTANT    shift, and go to state 69
    NEW             shift, and go to state 73
    THIS            shift, and go to state 75
    READINTEGER     shift, and go to state 78
    READLINE        shift, and go to state 79
    NEWARRAY        shift, and go to state 80
    NOT_OP          shift, and go to state 81
    IDENTIFIER      shift, and go to state 8
    STRING_LITERAL  shift, and go to state 82
    INTCONSTANT     shift, and go to state 83
    DOUBLECONSTANT  shift, and go to state 84
    BOOLCONSTANT    shift, and go to state 85
    '-'             shift, and go to state 86
    '('             shift, and go to state 88

    LValue      go to state 90
    Identifier  go to state 111
    Expr        go to state 119
    Call        go to state 102
    Constant    go to state 103


State 87

   47 Stmt: ';' .

    $default  reduce using rule 47 (Stmt)


State 88

   74 Expr: '(' . Expr ')'

    NULLCONSTANT    shift, and go to state 69
    NEW             shift, and go to state 73
    THIS            shift, and go to state 75
    READINTEGER     shift, and go to state 78
    READLINE        shift, and go to state 79
    NEWARRAY        shift, and go to state 80
    NOT_OP          shift, and go to state 81
    IDENTIFIER      shift, and go to state 8
    STRING_LITERAL  shift, and go to state 82
    INTCONSTANT     shift, and go to state 83
    DOUBLECONSTANT  shift, and go to state 84
    BOOLCONSTANT    shift, and go to state 85
    '-'             shift, and go to state 86
    '('             shift, and go to state 88

    LValue      go to state 90
    Identifier  go to state 111
    Expr        go to state 120
    Call        go to state 102
    Constant    go to state 103


State 89

   44 VariableDeclList: VariableDeclList VariableDecl .

    $default  reduce using rule 44 (VariableDeclList)


State 90

   69 Expr: LValue . '=' Expr
   71     | LValue .

    '='  shift, and go to state 121

    $default  reduce using rule 71 (Expr)


State 91

   12 LValue: Identifier .
   19 Type: Identifier .
   94 Call: Identifier . '(' Actuals ')'

    '('  shift, and go to state 122

    IDENTIFIER  reduce using rule 19 (Type)
    '['         reduce using rule 12 (LValue)
    '['         [reduce using rule 19 (Type)]
    $default    reduce using rule 12 (LValue)


State 92

   55 Stmt: StmtBlock .

    $default  reduce using rule 55 (Stmt)


State 93

   42 StmtBlock: '{' VariableDeclList StmtList . '}'

    '}'  shift, and go to state 123


State 94

   46 StmtList: Stmt . StmtList

    NULLCONSTANT    shift, and go to state 69
    BREAK           shift, and go to state 70
    FOR             shift, and go to state 71
    IF              shift, and go to state 72
    NEW             shift, and go to state 73
    RETURN          shift, and go to state 74
    THIS            shift, and go to state 75
    WHILE           shift, and go to state 76
    PRINT           shift, and go to state 77
    READINTEGER     shift, and go to state 78
    READLINE        shift, and go to state 79
    NEWARRAY        shift, and go to state 80
    NOT_OP          shift, and go to state 81
    IDENTIFIER      shift, and go to state 8
    STRING_LITERAL  shift, and go to state 82
    INTCONSTANT     shift, and go to state 83
    DOUBLECONSTANT  shift, and go to state 84
    BOOLCONSTANT    shift, and go to state 85
    '-'             shift, and go to state 86
    ';'             shift, and go to state 87
    '('             shift, and go to state 88
    '{'             shift, and go to state 54

    $default  reduce using rule 45 (StmtList)

    LValue      go to state 90
    Identifier  go to state 111
    StmtBlock   go to state 92
    StmtList    go to state 124
    Stmt        go to state 94
    IfStmt      go to state 95
    WhileStmt   go to state 96
    ForStmt     go to state 97
    ReturnStmt  go to state 98
    BreakStmt   go to state 99
    PrintStmt   go to state 100
    Expr        go to state 101
    Call        go to state 102
    Constant    go to state 103


State 95

   49 Stmt: IfStmt .

    $default  reduce using rule 49 (Stmt)


State 96

   50 Stmt: WhileStmt .

    $default  reduce using rule 50 (Stmt)


State 97

   51 Stmt: ForStmt .

    $default  reduce using rule 51 (Stmt)


State 98

   53 Stmt: ReturnStmt .

    $default  reduce using rule 53 (Stmt)


State 99

   52 Stmt: BreakStmt .

    $default  reduce using rule 52 (Stmt)


State 100

   54 Stmt: PrintStmt .

    $default  reduce using rule 54 (Stmt)


State 101

   13 LValue: Expr . '.' Identifier
   14       | Expr . '[' Expr ']'
   48 Stmt: Expr . ';'
   75 Expr: Expr . '+' Expr
   76     | Expr . '-' Expr
   77     | Expr . '*' Expr
   78     | Expr . '/' Expr
   79     | Expr . '%' Expr
   81     | Expr . '<' Expr
   82     | Expr . LE_OP Expr
   83     | Expr . '>' Expr
   84     | Expr . GE_OP Expr
   85     | Expr . EQ_OP Expr
   86     | Expr . NE_OP Expr
   87     | Expr . AND_OP Expr
   88     | Expr . OR_OP Expr
   95 Call: Expr . '.' Identifier '(' Actuals ')'

    LE_OP   shift, and go to state 125
    GE_OP   shift, and go to state 126
    EQ_OP   shift, and go to state 127
    NE_OP   shift, and go to state 128
    AND_OP  shift, and go to state 129
    OR_OP   shift, and go to state 130
    '<'     shift, and go to state 131
    '>'     shift, and go to state 132
    '+'     shift, and go to state 133
    '-'     shift, and go to state 134
    '*'     shift, and go to state 135
    '/'     shift, and go to state 136
    '%'     shift, and go to state 137
    '['     shift, and go to state 138
    '.'     shift, and go to state 139
    ';'     shift, and go to state 140


State 102

   73 Expr: Call .

    $default  reduce using rule 73 (Expr)


State 103

   70 Expr: Constant .

    $default  reduce using rule 70 (Expr)


State 104

   41 Prototype: VOID Identifier '(' Formals . ')' ';'

    ')'  shift, and go to state 141


State 105

   40 Prototype: Type Identifier '(' Formals . ')' ';'

    ')'  shift, and go to state 142


State 106

   67 BreakStmt: BREAK ';' .

    $default  reduce using rule 67 (BreakStmt)


State 107

   61 ForStmt: FOR '(' . ';' Expr ';' ')' Stmt
   62        | FOR '(' . Expr ';' Expr ';' ')' Stmt
   63        | FOR '(' . ';' Expr ';' Expr ')' Stmt
   64        | FOR '(' . Expr ';' Expr ';' Expr ')' Stmt

    NULLCONSTANT    shift, and go to state 69
    NEW             shift, and go to state 73
    THIS            shift, and go to state 75
    READINTEGER     shift, and go to state 78
    READLINE        shift, and go to state 79
    NEWARRAY        shift, and go to state 80
    NOT_OP          shift, and go to state 81
    IDENTIFIER      shift, and go to state 8
    STRING_LITERAL  shift, and go to state 82
    INTCONSTANT     shift, and go to state 83
    DOUBLECONSTANT  shift, and go to state 84
    BOOLCONSTANT    shift, and go to state 85
    '-'             shift, and go to state 86
    ';'             shift, and go to state 143
    '('             shift, and go to state 88

    LValue      go to state 90
    Identifier  go to state 111
    Expr        go to state 144
    Call        go to state 102
    Constant    go to state 103


State 108

   58 IfStmt: IF '(' . Expr ')' Stmt
   59       | IF '(' . Expr ')' Stmt ELSE Stmt

    NULLCONSTANT    shift, and go to state 69
    NEW             shift, and go to state 73
    THIS            shift, and go to state 75
    READINTEGER     shift, and go to state 78
    READLINE        shift, and go to state 79
    NEWARRAY        shift, and go to state 80
    NOT_OP          shift, and go to state 81
    IDENTIFIER      shift, and go to state 8
    STRING_LITERAL  shift, and go to state 82
    INTCONSTANT     shift, and go to state 83
    DOUBLECONSTANT  shift, and go to state 84
    BOOLCONSTANT    shift, and go to state 85
    '-'             shift, and go to state 86
    '('             shift, and go to state 88

    LValue      go to state 90
    Identifier  go to state 111
    Expr        go to state 145
    Call        go to state 102
    Constant    go to state 103


State 109

   92 Expr: NEW Identifier .

    $default  reduce using rule 92 (Expr)


State 110

   65 ReturnStmt: RETURN ';' .

    $default  reduce using rule 65 (ReturnStmt)


State 111

   12 LValue: Identifier .
   94 Call: Identifier . '(' Actuals ')'

    '('  shift, and go to state 122

    $default  reduce using rule 12 (LValue)


State 112

   13 LValue: Expr . '.' Identifier
   14       | Expr . '[' Expr ']'
   66 ReturnStmt: RETURN Expr . ';'
   75 Expr: Expr . '+' Expr
   76     | Expr . '-' Expr
   77     | Expr . '*' Expr
   78     | Expr . '/' Expr
   79     | Expr . '%' Expr
   81     | Expr . '<' Expr
   82     | Expr . LE_OP Expr
   83     | Expr . '>' Expr
   84     | Expr . GE_OP Expr
   85     | Expr . EQ_OP Expr
   86     | Expr . NE_OP Expr
   87     | Expr . AND_OP Expr
   88     | Expr . OR_OP Expr
   95 Call: Expr . '.' Identifier '(' Actuals ')'

    LE_OP   shift, and go to state 125
    GE_OP   shift, and go to state 126
    EQ_OP   shift, and go to state 127
    NE_OP   shift, and go to state 128
    AND_OP  shift, and go to state 129
    OR_OP   shift, and go to state 130
    '<'     shift, and go to state 131
    '>'     shift, and go to state 132
    '+'     shift, and go to state 133
    '-'     shift, and go to state 134
    '*'     shift, and go to state 135
    '/'     shift, and go to state 136
    '%'     shift, and go to state 137
    '['     shift, and go to state 138
    '.'     shift, and go to state 139
    ';'     shift, and go to state 146


State 113

   60 WhileStmt: WHILE '(' . Expr ')' Stmt

    NULLCONSTANT    shift, and go to state 69
    NEW             shift, and go to state 73
    THIS            shift, and go to state 75
    READINTEGER     shift, and go to state 78
    READLINE        shift, and go to state 79
    NEWARRAY        shift, and go to state 80
    NOT_OP          shift, and go to state 81
    IDENTIFIER      shift, and go to state 8
    STRING_LITERAL  shift, and go to state 82
    INTCONSTANT     shift, and go to state 83
    DOUBLECONSTANT  shift, and go to state 84
    BOOLCONSTANT    shift, and go to state 85
    '-'             shift, and go to state 86
    '('             shift, and go to state 88

    LValue      go to state 90
    Identifier  go to state 111
    Expr        go to state 147
    Call        go to state 102
    Constant    go to state 103


State 114

   68 PrintStmt: PRINT '(' . ExprList ')' ';'

    NULLCONSTANT    shift, and go to state 69
    NEW             shift, and go to state 73
    THIS            shift, and go to state 75
    READINTEGER     shift, and go to state 78
    READLINE        shift, and go to state 79
    NEWARRAY        shift, and go to state 80
    NOT_OP          shift, and go to state 81
    IDENTIFIER      shift, and go to state 8
    STRING_LITERAL  shift, and go to state 82
    INTCONSTANT     shift, and go to state 83
    DOUBLECONSTANT  shift, and go to state 84
    BOOLCONSTANT    shift, and go to state 85
    '-'             shift, and go to state 86
    '('             shift, and go to state 88

    LValue      go to state 90
    Identifier  go to state 111
    ExprList    go to state 148
    Expr        go to state 149
    Call        go to state 102
    Constant    go to state 103


State 115

   90 Expr: READINTEGER '(' . ')'

    ')'  shift, and go to state 150


State 116

   91 Expr: READLINE '(' . ')'

    ')'  shift, and go to state 151


State 117

   93 Expr: NEWARRAY '(' . Expr ',' Type ')'

    NULLCONSTANT    shift, and go to state 69
    NEW             shift, and go to state 73
    THIS            shift, and go to state 75
    READINTEGER     shift, and go to state 78
    READLINE        shift, and go to state 79
    NEWARRAY        shift, and go to state 80
    NOT_OP          shift, and go to state 81
    IDENTIFIER      shift, and go to state 8
    STRING_LITERAL  shift, and go to state 82
    INTCONSTANT     shift, and go to state 83
    DOUBLECONSTANT  shift, and go to state 84
    BOOLCONSTANT    shift, and go to state 85
    '-'             shift, and go to state 86
    '('             shift, and go to state 88

    LValue      go to state 90
    Identifier  go to state 111
    Expr        go to state 152
    Call        go to state 102
    Constant    go to state 103


State 118

   13 LValue: Expr . '.' Identifier
   14       | Expr . '[' Expr ']'
   75 Expr: Expr . '+' Expr
   76     | Expr . '-' Expr
   77     | Expr . '*' Expr
   78     | Expr . '/' Expr
   79     | Expr . '%' Expr
   81     | Expr . '<' Expr
   82     | Expr . LE_OP Expr
   83     | Expr . '>' Expr
   84     | Expr . GE_OP Expr
   85     | Expr . EQ_OP Expr
   86     | Expr . NE_OP Expr
   87     | Expr . AND_OP Expr
   88     | Expr . OR_OP Expr
   89     | NOT_OP Expr .
   95 Call: Expr . '.' Identifier '(' Actuals ')'

    '['  shift, and go to state 138
    '.'  shift, and go to state 139

    $default  reduce using rule 89 (Expr)


State 119

   13 LValue: Expr . '.' Identifier
   14       | Expr . '[' Expr ']'
   75 Expr: Expr . '+' Expr
   76     | Expr . '-' Expr
   77     | Expr . '*' Expr
   78     | Expr . '/' Expr
   79     | Expr . '%' Expr
   80     | '-' Expr .
   81     | Expr . '<' Expr
   82     | Expr . LE_OP Expr
   83     | Expr . '>' Expr
   84     | Expr . GE_OP Expr
   85     | Expr . EQ_OP Expr
   86     | Expr . NE_OP Expr
   87     | Expr . AND_OP Expr
   88     | Expr . OR_OP Expr
   95 Call: Expr . '.' Identifier '(' Actuals ')'

    '['  shift, and go to state 138
    '.'  shift, and go to state 139

    $default  reduce using rule 80 (Expr)


State 120

   13 LValue: Expr . '.' Identifier
   14       | Expr . '[' Expr ']'
   74 Expr: '(' Expr . ')'
   75     | Expr . '+' Expr
   76     | Expr . '-' Expr
   77     | Expr . '*' Expr
   78     | Expr . '/' Expr
   79     | Expr . '%' Expr
   81     | Expr . '<' Expr
   82     | Expr . LE_OP Expr
   83     | Expr . '>' Expr
   84     | Expr . GE_OP Expr
   85     | Expr . EQ_OP Expr
   86     | Expr . NE_OP Expr
   87     | Expr . AND_OP Expr
   88     | Expr . OR_OP Expr
   95 Call: Expr . '.' Identifier '(' Actuals ')'

    LE_OP   shift, and go to state 125
    GE_OP   shift, and go to state 126
    EQ_OP   shift, and go to state 127
    NE_OP   shift, and go to state 128
    AND_OP  shift, and go to state 129
    OR_OP   shift, and go to state 130
    '<'     shift, and go to state 131
    '>'     shift, and go to state 132
    '+'     shift, and go to state 133
    '-'     shift, and go to state 134
    '*'     shift, and go to state 135
    '/'     shift, and go to state 136
    '%'     shift, and go to state 137
    '['     shift, and go to state 138
    '.'     shift, and go to state 139
    ')'     shift, and go to state 153


State 121

   69 Expr: LValue '=' . Expr

    NULLCONSTANT    shift, and go to state 69
    NEW             shift, and go to state 73
    THIS            shift, and go to state 75
    READINTEGER     shift, and go to state 78
    READLINE        shift, and go to state 79
    NEWARRAY        shift, and go to state 80
    NOT_OP          shift, and go to state 81
    IDENTIFIER      shift, and go to state 8
    STRING_LITERAL  shift, and go to state 82
    INTCONSTANT     shift, and go to state 83
    DOUBLECONSTANT  shift, and go to state 84
    BOOLCONSTANT    shift, and go to state 85
    '-'             shift, and go to state 86
    '('             shift, and go to state 88

    LValue      go to state 90
    Identifier  go to state 111
    Expr        go to state 154
    Call        go to state 102
    Constant    go to state 103


State 122

   94 Call: Identifier '(' . Actuals ')'

    NULLCONSTANT    shift, and go to state 69
    NEW             shift, and go to state 73
    THIS            shift, and go to state 75
    READINTEGER     shift, and go to state 78
    READLINE        shift, and go to state 79
    NEWARRAY        shift, and go to state 80
    NOT_OP          shift, and go to state 81
    IDENTIFIER      shift, and go to state 8
    STRING_LITERAL  shift, and go to state 82
    INTCONSTANT     shift, and go to state 83
    DOUBLECONSTANT  shift, and go to state 84
    BOOLCONSTANT    shift, and go to state 85
    '-'             shift, and go to state 86
    '('             shift, and go to state 88

    $default  reduce using rule 96 (Actuals)

    LValue      go to state 90
    Identifier  go to state 111
    ExprList    go to state 155
    Expr        go to state 149
    Call        go to state 102
    Actuals     go to state 156
    Constant    go to state 103


State 123

   42 StmtBlock: '{' VariableDeclList StmtList '}' .

    $default  reduce using rule 42 (StmtBlock)


State 124

   46 StmtList: Stmt StmtList .

    $default  reduce using rule 46 (StmtList)


State 125

   82 Expr: Expr LE_OP . Expr

    NULLCONSTANT    shift, and go to state 69
    NEW             shift, and go to state 73
    THIS            shift, and go to state 75
    READINTEGER     shift, and go to state 78
    READLINE        shift, and go to state 79
    NEWARRAY        shift, and go to state 80
    NOT_OP          shift, and go to state 81
    IDENTIFIER      shift, and go to state 8
    STRING_LITERAL  shift, and go to state 82
    INTCONSTANT     shift, and go to state 83
    DOUBLECONSTANT  shift, and go to state 84
    BOOLCONSTANT    shift, and go to state 85
    '-'             shift, and go to state 86
    '('             shift, and go to state 88

    LValue      go to state 90
    Identifier  go to state 111
    Expr        go to state 157
    Call        go to state 102
    Constant    go to state 103


State 126

   84 Expr: Expr GE_OP . Expr

    NULLCONSTANT    shift, and go to state 69
    NEW             shift, and go to state 73
    THIS            shift, and go to state 75
    READINTEGER     shift, and go to state 78
    READLINE        shift, and go to state 79
    NEWARRAY        shift, and go to state 80
    NOT_OP          shift, and go to state 81
    IDENTIFIER      shift, and go to state 8
    STRING_LITERAL  shift, and go to state 82
    INTCONSTANT     shift, and go to state 83
    DOUBLECONSTANT  shift, and go to state 84
    BOOLCONSTANT    shift, and go to state 85
    '-'             shift, and go to state 86
    '('             shift, and go to state 88

    LValue      go to state 90
    Identifier  go to state 111
    Expr        go to state 158
    Call        go to state 102
    Constant    go to state 103


State 127

   85 Expr: Expr EQ_OP . Expr

    NULLCONSTANT    shift, and go to state 69
    NEW             shift, and go to state 73
    THIS            shift, and go to state 75
    READINTEGER     shift, and go to state 78
    READLINE        shift, and go to state 79
    NEWARRAY        shift, and go to state 80
    NOT_OP          shift, and go to state 81
    IDENTIFIER      shift, and go to state 8
    STRING_LITERAL  shift, and go to state 82
    INTCONSTANT     shift, and go to state 83
    DOUBLECONSTANT  shift, and go to state 84
    BOOLCONSTANT    shift, and go to state 85
    '-'             shift, and go to state 86
    '('             shift, and go to state 88

    LValue      go to state 90
    Identifier  go to state 111
    Expr        go to state 159
    Call        go to state 102
    Constant    go to state 103


State 128

   86 Expr: Expr NE_OP . Expr

    NULLCONSTANT    shift, and go to state 69
    NEW             shift, and go to state 73
    THIS            shift, and go to state 75
    READINTEGER     shift, and go to state 78
    READLINE        shift, and go to state 79
    NEWARRAY        shift, and go to state 80
    NOT_OP          shift, and go to state 81
    IDENTIFIER      shift, and go to state 8
    STRING_LITERAL  shift, and go to state 82
    INTCONSTANT     shift, and go to state 83
    DOUBLECONSTANT  shift, and go to state 84
    BOOLCONSTANT    shift, and go to state 85
    '-'             shift, and go to state 86
    '('             shift, and go to state 88

    LValue      go to state 90
    Identifier  go to state 111
    Expr        go to state 160
    Call        go to state 102
    Constant    go to state 103


State 129

   87 Expr: Expr AND_OP . Expr

    NULLCONSTANT    shift, and go to state 69
    NEW             shift, and go to state 73
    THIS            shift, and go to state 75
    READINTEGER     shift, and go to state 78
    READLINE        shift, and go to state 79
    NEWARRAY        shift, and go to state 80
    NOT_OP          shift, and go to state 81
    IDENTIFIER      shift, and go to state 8
    STRING_LITERAL  shift, and go to state 82
    INTCONSTANT     shift, and go to state 83
    DOUBLECONSTANT  shift, and go to state 84
    BOOLCONSTANT    shift, and go to state 85
    '-'             shift, and go to state 86
    '('             shift, and go to state 88

    LValue      go to state 90
    Identifier  go to state 111
    Expr        go to state 161
    Call        go to state 102
    Constant    go to state 103


State 130

   88 Expr: Expr OR_OP . Expr

    NULLCONSTANT    shift, and go to state 69
    NEW             shift, and go to state 73
    THIS            shift, and go to state 75
    READINTEGER     shift, and go to state 78
    READLINE        shift, and go to state 79
    NEWARRAY        shift, and go to state 80
    NOT_OP          shift, and go to state 81
    IDENTIFIER      shift, and go to state 8
    STRING_LITERAL  shift, and go to state 82
    INTCONSTANT     shift, and go to state 83
    DOUBLECONSTANT  shift, and go to state 84
    BOOLCONSTANT    shift, and go to state 85
    '-'             shift, and go to state 86
    '('             shift, and go to state 88

    LValue      go to state 90
    Identifier  go to state 111
    Expr        go to state 162
    Call        go to state 102
    Constant    go to state 103


State 131

   81 Expr: Expr '<' . Expr

    NULLCONSTANT    shift, and go to state 69
    NEW             shift, and go to state 73
    THIS            shift, and go to state 75
    READINTEGER     shift, and go to state 78
    READLINE        shift, and go to state 79
    NEWARRAY        shift, and go to state 80
    NOT_OP          shift, and go to state 81
    IDENTIFIER      shift, and go to state 8
    STRING_LITERAL  shift, and go to state 82
    INTCONSTANT     shift, and go to state 83
    DOUBLECONSTANT  shift, and go to state 84
    BOOLCONSTANT    shift, and go to state 85
    '-'             shift, and go to state 86
    '('             shift, and go to state 88

    LValue      go to state 90
    Identifier  go to state 111
    Expr        go to state 163
    Call        go to state 102
    Constant    go to state 103


State 132

   83 Expr: Expr '>' . Expr

    NULLCONSTANT    shift, and go to state 69
    NEW             shift, and go to state 73
    THIS            shift, and go to state 75
    READINTEGER     shift, and go to state 78
    READLINE        shift, and go to state 79
    NEWARRAY        shift, and go to state 80
    NOT_OP          shift, and go to state 81
    IDENTIFIER      shift, and go to state 8
    STRING_LITERAL  shift, and go to state 82
    INTCONSTANT     shift, and go to state 83
    DOUBLECONSTANT  shift, and go to state 84
    BOOLCONSTANT    shift, and go to state 85
    '-'             shift, and go to state 86
    '('             shift, and go to state 88

    LValue      go to state 90
    Identifier  go to state 111
    Expr        go to state 164
    Call        go to state 102
    Constant    go to state 103


State 133

   75 Expr: Expr '+' . Expr

    NULLCONSTANT    shift, and go to state 69
    NEW             shift, and go to state 73
    THIS            shift, and go to state 75
    READINTEGER     shift, and go to state 78
    READLINE        shift, and go to state 79
    NEWARRAY        shift, and go to state 80
    NOT_OP          shift, and go to state 81
    IDENTIFIER      shift, and go to state 8
    STRING_LITERAL  shift, and go to state 82
    INTCONSTANT     shift, and go to state 83
    DOUBLECONSTANT  shift, and go to state 84
    BOOLCONSTANT    shift, and go to state 85
    '-'             shift, and go to state 86
    '('             shift, and go to state 88

    LValue      go to state 90
    Identifier  go to state 111
    Expr        go to state 165
    Call        go to state 102
    Constant    go to state 103


State 134

   76 Expr: Expr '-' . Expr

    NULLCONSTANT    shift, and go to state 69
    NEW             shift, and go to state 73
    THIS            shift, and go to state 75
    READINTEGER     shift, and go to state 78
    READLINE        shift, and go to state 79
    NEWARRAY        shift, and go to state 80
    NOT_OP          shift, and go to state 81
    IDENTIFIER      shift, and go to state 8
    STRING_LITERAL  shift, and go to state 82
    INTCONSTANT     shift, and go to state 83
    DOUBLECONSTANT  shift, and go to state 84
    BOOLCONSTANT    shift, and go to state 85
    '-'             shift, and go to state 86
    '('             shift, and go to state 88

    LValue      go to state 90
    Identifier  go to state 111
    Expr        go to state 166
    Call        go to state 102
    Constant    go to state 103


State 135

   77 Expr: Expr '*' . Expr

    NULLCONSTANT    shift, and go to state 69
    NEW             shift, and go to state 73
    THIS            shift, and go to state 75
    READINTEGER     shift, and go to state 78
    READLINE        shift, and go to state 79
    NEWARRAY        shift, and go to state 80
    NOT_OP          shift, and go to state 81
    IDENTIFIER      shift, and go to state 8
    STRING_LITERAL  shift, and go to state 82
    INTCONSTANT     shift, and go to state 83
    DOUBLECONSTANT  shift, and go to state 84
    BOOLCONSTANT    shift, and go to state 85
    '-'             shift, and go to state 86
    '('             shift, and go to state 88

    LValue      go to state 90
    Identifier  go to state 111
    Expr        go to state 167
    Call        go to state 102
    Constant    go to state 103


State 136

   78 Expr: Expr '/' . Expr

    NULLCONSTANT    shift, and go to state 69
    NEW             shift, and go to state 73
    THIS            shift, and go to state 75
    READINTEGER     shift, and go to state 78
    READLINE        shift, and go to state 79
    NEWARRAY        shift, and go to state 80
    NOT_OP          shift, and go to state 81
    IDENTIFIER      shift, and go to state 8
    STRING_LITERAL  shift, and go to state 82
    INTCONSTANT     shift, and go to state 83
    DOUBLECONSTANT  shift, and go to state 84
    BOOLCONSTANT    shift, and go to state 85
    '-'             shift, and go to state 86
    '('             shift, and go to state 88

    LValue      go to state 90
    Identifier  go to state 111
    Expr        go to state 168
    Call        go to state 102
    Constant    go to state 103


State 137

   79 Expr: Expr '%' . Expr

    NULLCONSTANT    shift, and go to state 69
    NEW             shift, and go to state 73
    THIS            shift, and go to state 75
    READINTEGER     shift, and go to state 78
    READLINE        shift, and go to state 79
    NEWARRAY        shift, and go to state 80
    NOT_OP          shift, and go to state 81
    IDENTIFIER      shift, and go to state 8
    STRING_LITERAL  shift, and go to state 82
    INTCONSTANT     shift, and go to state 83
    DOUBLECONSTANT  shift, and go to state 84
    BOOLCONSTANT    shift, and go to state 85
    '-'             shift, and go to state 86
    '('             shift, and go to state 88

    LValue      go to state 90
    Identifier  go to state 111
    Expr        go to state 169
    Call        go to state 102
    Constant    go to state 103


State 138

   14 LValue: Expr '[' . Expr ']'

    NULLCONSTANT    shift, and go to state 69
    NEW             shift, and go to state 73
    THIS            shift, and go to state 75
    READINTEGER     shift, and go to state 78
    READLINE        shift, and go to state 79
    NEWARRAY        shift, and go to state 80
    NOT_OP          shift, and go to state 81
    IDENTIFIER      shift, and go to state 8
    STRING_LITERAL  shift, and go to state 82
    INTCONSTANT     shift, and go to state 83
    DOUBLECONSTANT  shift, and go to state 84
    BOOLCONSTANT    shift, and go to state 85
    '-'             shift, and go to state 86
    '('             shift, and go to state 88

    LValue      go to state 90
    Identifier  go to state 111
    Expr        go to state 170
    Call        go to state 102
    Constant    go to state 103


State 139

   13 LValue: Expr '.' . Identifier
   95 Call: Expr '.' . Identifier '(' Actuals ')'

    IDENTIFIER  shift, and go to state 8

    Identifier  go to state 171


State 140

   48 Stmt: Expr ';' .

    $default  reduce using rule 48 (Stmt)


State 141

   41 Prototype: VOID Identifier '(' Formals ')' . ';'

    ';'  shift, and go to state 172


State 142

   40 Prototype: Type Identifier '(' Formals ')' . ';'

    ';'  shift, and go to state 173


State 143

   61 ForStmt: FOR '(' ';' . Expr ';' ')' Stmt
   63        | FOR '(' ';' . Expr ';' Expr ')' Stmt

    NULLCONSTANT    shift, and go to state 69
    NEW             shift, and go to state 73
    THIS            shift, and go to state 75
    READINTEGER     shift, and go to state 78
    READLINE        shift, and go to state 79
    NEWARRAY        shift, and go to state 80
    NOT_OP          shift, and go to state 81
    IDENTIFIER      shift, and go to state 8
    STRING_LITERAL  shift, and go to state 82
    INTCONSTANT     shift, and go to state 83
    DOUBLECONSTANT  shift, and go to state 84
    BOOLCONSTANT    shift, and go to state 85
    '-'             shift, and go to state 86
    '('             shift, and go to state 88

    LValue      go to state 90
    Identifier  go to state 111
    Expr        go to state 174
    Call        go to state 102
    Constant    go to state 103


State 144

   13 LValue: Expr . '.' Identifier
   14       | Expr . '[' Expr ']'
   62 ForStmt: FOR '(' Expr . ';' Expr ';' ')' Stmt
   64        | FOR '(' Expr . ';' Expr ';' Expr ')' Stmt
   75 Expr: Expr . '+' Expr
   76     | Expr . '-' Expr
   77     | Expr . '*' Expr
   78     | Expr . '/' Expr
   79     | Expr . '%' Expr
   81     | Expr . '<' Expr
   82     | Expr . LE_OP Expr
   83     | Expr . '>' Expr
   84     | Expr . GE_OP Expr
   85     | Expr . EQ_OP Expr
   86     | Expr . NE_OP Expr
   87     | Expr . AND_OP Expr
   88     | Expr . OR_OP Expr
   95 Call: Expr . '.' Identifier '(' Actuals ')'

    LE_OP   shift, and go to state 125
    GE_OP   shift, and go to state 126
    EQ_OP   shift, and go to state 127
    NE_OP   shift, and go to state 128
    AND_OP  shift, and go to state 129
    OR_OP   shift, and go to state 130
    '<'     shift, and go to state 131
    '>'     shift, and go to state 132
    '+'     shift, and go to state 133
    '-'     shift, and go to state 134
    '*'     shift, and go to state 135
    '/'     shift, and go to state 136
    '%'     shift, and go to state 137
    '['     shift, and go to state 138
    '.'     shift, and go to state 139
    ';'     shift, and go to state 175


State 145

   13 LValue: Expr . '.' Identifier
   14       | Expr . '[' Expr ']'
   58 IfStmt: IF '(' Expr . ')' Stmt
   59       | IF '(' Expr . ')' Stmt ELSE Stmt
   75 Expr: Expr . '+' Expr
   76     | Expr . '-' Expr
   77     | Expr . '*' Expr
   78     | Expr . '/' Expr
   79     | Expr . '%' Expr
   81     | Expr . '<' Expr
   82     | Expr . LE_OP Expr
   83     | Expr . '>' Expr
   84     | Expr . GE_OP Expr
   85     | Expr . EQ_OP Expr
   86     | Expr . NE_OP Expr
   87     | Expr . AND_OP Expr
   88     | Expr . OR_OP Expr
   95 Call: Expr . '.' Identifier '(' Actuals ')'

    LE_OP   shift, and go to state 125
    GE_OP   shift, and go to state 126
    EQ_OP   shift, and go to state 127
    NE_OP   shift, and go to state 128
    AND_OP  shift, and go to state 129
    OR_OP   shift, and go to state 130
    '<'     shift, and go to state 131
    '>'     shift, and go to state 132
    '+'     shift, and go to state 133
    '-'     shift, and go to state 134
    '*'     shift, and go to state 135
    '/'     shift, and go to state 136
    '%'     shift, and go to state 137
    '['     shift, and go to state 138
    '.'     shift, and go to state 139
    ')'     shift, and go to state 176


State 146

   66 ReturnStmt: RETURN Expr ';' .

    $default  reduce using rule 66 (ReturnStmt)


State 147

   13 LValue: Expr . '.' Identifier
   14       | Expr . '[' Expr ']'
   60 WhileStmt: WHILE '(' Expr . ')' Stmt
   75 Expr: Expr . '+' Expr
   76     | Expr . '-' Expr
   77     | Expr . '*' Expr
   78     | Expr . '/' Expr
   79     | Expr . '%' Expr
   81     | Expr . '<' Expr
   82     | Expr . LE_OP Expr
   83     | Expr . '>' Expr
   84     | Expr . GE_OP Expr
   85     | Expr . EQ_OP Expr
   86     | Expr . NE_OP Expr
   87     | Expr . AND_OP Expr
   88     | Expr . OR_OP Expr
   95 Call: Expr . '.' Identifier '(' Actuals ')'

    LE_OP   shift, and go to state 125
    GE_OP   shift, and go to state 126
    EQ_OP   shift, and go to state 127
    NE_OP   shift, and go to state 128
    AND_OP  shift, and go to state 129
    OR_OP   shift, and go to state 130
    '<'     shift, and go to state 131
    '>'     shift, and go to state 132
    '+'     shift, and go to state 133
    '-'     shift, and go to state 134
    '*'     shift, and go to state 135
    '/'     shift, and go to state 136
    '%'     shift, and go to state 137
    '['     shift, and go to state 138
    '.'     shift, and go to state 139
    ')'     shift, and go to state 177


State 148

   57 ExprList: ExprList . ',' Expr
   68 PrintStmt: PRINT '(' ExprList . ')' ';'

    ')'  shift, and go to state 178
    ','  shift, and go to state 179


State 149

   13 LValue: Expr . '.' Identifier
   14       | Expr . '[' Expr ']'
   56 ExprList: Expr .
   75 Expr: Expr . '+' Expr
   76     | Expr . '-' Expr
   77     | Expr . '*' Expr
   78     | Expr . '/' Expr
   79     | Expr . '%' Expr
   81     | Expr . '<' Expr
   82     | Expr . LE_OP Expr
   83     | Expr . '>' Expr
   84     | Expr . GE_OP Expr
   85     | Expr . EQ_OP Expr
   86     | Expr . NE_OP Expr
   87     | Expr . AND_OP Expr
   88     | Expr . OR_OP Expr
   95 Call: Expr . '.' Identifier '(' Actuals ')'

    LE_OP   shift, and go to state 125
    GE_OP   shift, and go to state 126
    EQ_OP   shift, and go to state 127
    NE_OP   shift, and go to state 128
    AND_OP  shift, and go to state 129
    OR_OP   shift, and go to state 130
    '<'     shift, and go to state 131
    '>'     shift, and go to state 132
    '+'     shift, and go to state 133
    '-'     shift, and go to state 134
    '*'     shift, and go to state 135
    '/'     shift, and go to state 136
    '%'     shift, and go to state 137
    '['     shift, and go to state 138
    '.'     shift, and go to state 139

    $default  reduce using rule 56 (ExprList)


State 150

   90 Expr: READINTEGER '(' ')' .

    $default  reduce using rule 90 (Expr)


State 151

   91 Expr: READLINE '(' ')' .

    $default  reduce using rule 91 (Expr)


State 152

   13 LValue: Expr . '.' Identifier
   14       | Expr . '[' Expr ']'
   75 Expr: Expr . '+' Expr
   76     | Expr . '-' Expr
   77     | Expr . '*' Expr
   78     | Expr . '/' Expr
   79     | Expr . '%' Expr
   81     | Expr . '<' Expr
   82     | Expr . LE_OP Expr
   83     | Expr . '>' Expr
   84     | Expr . GE_OP Expr
   85     | Expr . EQ_OP Expr
   86     | Expr . NE_OP Expr
   87     | Expr . AND_OP Expr
   88     | Expr . OR_OP Expr
   93     | NEWARRAY '(' Expr . ',' Type ')'
   95 Call: Expr . '.' Identifier '(' Actuals ')'

    LE_OP   shift, and go to state 125
    GE_OP   shift, and go to state 126
    EQ_OP   shift, and go to state 127
    NE_OP   shift, and go to state 128
    AND_OP  shift, and go to state 129
    OR_OP   shift, and go to state 130
    '<'     shift, and go to state 131
    '>'     shift, and go to state 132
    '+'     shift, and go to state 133
    '-'     shift, and go to state 134
    '*'     shift, and go to state 135
    '/'     shift, and go to state 136
    '%'     shift, and go to state 137
    '['     shift, and go to state 138
    '.'     shift, and go to state 139
    ','     shift, and go to state 180


State 153

   74 Expr: '(' Expr ')' .

    $default  reduce using rule 74 (Expr)


State 154

   13 LValue: Expr . '.' Identifier
   14       | Expr . '[' Expr ']'
   69 Expr: LValue '=' Expr .
   75     | Expr . '+' Expr
   76     | Expr . '-' Expr
   77     | Expr . '*' Expr
   78     | Expr . '/' Expr
   79     | Expr . '%' Expr
   81     | Expr . '<' Expr
   82     | Expr . LE_OP Expr
   83     | Expr . '>' Expr
   84     | Expr . GE_OP Expr
   85     | Expr . EQ_OP Expr
   86     | Expr . NE_OP Expr
   87     | Expr . AND_OP Expr
   88     | Expr . OR_OP Expr
   95 Call: Expr . '.' Identifier '(' Actuals ')'

    LE_OP   shift, and go to state 125
    GE_OP   shift, and go to state 126
    EQ_OP   shift, and go to state 127
    NE_OP   shift, and go to state 128
    AND_OP  shift, and go to state 129
    OR_OP   shift, and go to state 130
    '<'     shift, and go to state 131
    '>'     shift, and go to state 132
    '+'     shift, and go to state 133
    '-'     shift, and go to state 134
    '*'     shift, and go to state 135
    '/'     shift, and go to state 136
    '%'     shift, and go to state 137
    '['     shift, and go to state 138
    '.'     shift, and go to state 139

    $default  reduce using rule 69 (Expr)


State 155

   57 ExprList: ExprList . ',' Expr
   97 Actuals: ExprList .

    ','  shift, and go to state 179

    $default  reduce using rule 97 (Actuals)


State 156

   94 Call: Identifier '(' Actuals . ')'

    ')'  shift, and go to state 181


State 157

   13 LValue: Expr . '.' Identifier
   14       | Expr . '[' Expr ']'
   75 Expr: Expr . '+' Expr
   76     | Expr . '-' Expr
   77     | Expr . '*' Expr
   78     | Expr . '/' Expr
   79     | Expr . '%' Expr
   81     | Expr . '<' Expr
   82     | Expr . LE_OP Expr
   82     | Expr LE_OP Expr .
   83     | Expr . '>' Expr
   84     | Expr . GE_OP Expr
   85     | Expr . EQ_OP Expr
   86     | Expr . NE_OP Expr
   87     | Expr . AND_OP Expr
   88     | Expr . OR_OP Expr
   95 Call: Expr . '.' Identifier '(' Actuals ')'

    '+'  shift, and go to state 133
    '-'  shift, and go to state 134
    '*'  shift, and go to state 135
    '/'  shift, and go to state 136
    '%'  shift, and go to state 137
    '['  shift, and go to state 138
    '.'  shift, and go to state 139

    LE_OP  error (nonassociative)
    GE_OP  error (nonassociative)
    '<'    error (nonassociative)
    '>'    error (nonassociative)

    $default  reduce using rule 82 (Expr)


State 158

   13 LValue: Expr . '.' Identifier
   14       | Expr . '[' Expr ']'
   75 Expr: Expr . '+' Expr
   76     | Expr . '-' Expr
   77     | Expr . '*' Expr
   78     | Expr . '/' Expr
   79     | Expr . '%' Expr
   81     | Expr . '<' Expr
   82     | Expr . LE_OP Expr
   83     | Expr . '>' Expr
   84     | Expr . GE_OP Expr
   84     | Expr GE_OP Expr .
   85     | Expr . EQ_OP Expr
   86     | Expr . NE_OP Expr
   87     | Expr . AND_OP Expr
   88     | Expr . OR_OP Expr
   95 Call: Expr . '.' Identifier '(' Actuals ')'

    '+'  shift, and go to state 133
    '-'  shift, and go to state 134
    '*'  shift, and go to state 135
    '/'  shift, and go to state 136
    '%'  shift, and go to state 137
    '['  shift, and go to state 138
    '.'  shift, and go to state 139

    LE_OP  error (nonassociative)
    GE_OP  error (nonassociative)
    '<'    error (nonassociative)
    '>'    error (nonassociative)

    $default  reduce using rule 84 (Expr)


State 159

   13 LValue: Expr . '.' Identifier
   14       | Expr . '[' Expr ']'
   75 Expr: Expr . '+' Expr
   76     | Expr . '-' Expr
   77     | Expr . '*' Expr
   78     | Expr . '/' Expr
   79     | Expr . '%' Expr
   81     | Expr . '<' Expr
   82     | Expr . LE_OP Expr
   83     | Expr . '>' Expr
   84     | Expr . GE_OP Expr
   85     | Expr . EQ_OP Expr
   85     | Expr EQ_OP Expr .
   86     | Expr . NE_OP Expr
   87     | Expr . AND_OP Expr
   88     | Expr . OR_OP Expr
   95 Call: Expr . '.' Identifier '(' Actuals ')'

    LE_OP  shift, and go to state 125
    GE_OP  shift, and go to state 126
    '<'    shift, and go to state 131
    '>'    shift, and go to state 132
    '+'    shift, and go to state 133
    '-'    shift, and go to state 134
    '*'    shift, and go to state 135
    '/'    shift, and go to state 136
    '%'    shift, and go to state 137
    '['    shift, and go to state 138
    '.'    shift, and go to state 139

    EQ_OP  error (nonassociative)
    NE_OP  error (nonassociative)

    $default  reduce using rule 85 (Expr)


State 160

   13 LValue: Expr . '.' Identifier
   14       | Expr . '[' Expr ']'
   75 Expr: Expr . '+' Expr
   76     | Expr . '-' Expr
   77     | Expr . '*' Expr
   78     | Expr . '/' Expr
   79     | Expr . '%' Expr
   81     | Expr . '<' Expr
   82     | Expr . LE_OP Expr
   83     | Expr . '>' Expr
   84     | Expr . GE_OP Expr
   85     | Expr . EQ_OP Expr
   86     | Expr . NE_OP Expr
   86     | Expr NE_OP Expr .
   87     | Expr . AND_OP Expr
   88     | Expr . OR_OP Expr
   95 Call: Expr . '.' Identifier '(' Actuals ')'

    LE_OP  shift, and go to state 125
    GE_OP  shift, and go to state 126
    '<'    shift, and go to state 131
    '>'    shift, and go to state 132
    '+'    shift, and go to state 133
    '-'    shift, and go to state 134
    '*'    shift, and go to state 135
    '/'    shift, and go to state 136
    '%'    shift, and go to state 137
    '['    shift, and go to state 138
    '.'    shift, and go to state 139

    EQ_OP  error (nonassociative)
    NE_OP  error (nonassociative)

    $default  reduce using rule 86 (Expr)


State 161

   13 LValue: Expr . '.' Identifier
   14       | Expr . '[' Expr ']'
   75 Expr: Expr . '+' Expr
   76     | Expr . '-' Expr
   77     | Expr . '*' Expr
   78     | Expr . '/' Expr
   79     | Expr . '%' Expr
   81     | Expr . '<' Expr
   82     | Expr . LE_OP Expr
   83     | Expr . '>' Expr
   84     | Expr . GE_OP Expr
   85     | Expr . EQ_OP Expr
   86     | Expr . NE_OP Expr
   87     | Expr . AND_OP Expr
   87     | Expr AND_OP Expr .
   88     | Expr . OR_OP Expr
   95 Call: Expr . '.' Identifier '(' Actuals ')'

    LE_OP  shift, and go to state 125
    GE_OP  shift, and go to state 126
    EQ_OP  shift, and go to state 127
    NE_OP  shift, and go to state 128
    '<'    shift, and go to state 131
    '>'    shift, and go to state 132
    '+'    shift, and go to state 133
    '-'    shift, and go to state 134
    '*'    shift, and go to state 135
    '/'    shift, and go to state 136
    '%'    shift, and go to state 137
    '['    shift, and go to state 138
    '.'    shift, and go to state 139

    $default  reduce using rule 87 (Expr)


State 162

   13 LValue: Expr . '.' Identifier
   14       | Expr . '[' Expr ']'
   75 Expr: Expr . '+' Expr
   76     | Expr . '-' Expr
   77     | Expr . '*' Expr
   78     | Expr . '/' Expr
   79     | Expr . '%' Expr
   81     | Expr . '<' Expr
   82     | Expr . LE_OP Expr
   83     | Expr . '>' Expr
   84     | Expr . GE_OP Expr
   85     | Expr . EQ_OP Expr
   86     | Expr . NE_OP Expr
   87     | Expr . AND_OP Expr
   88     | Expr . OR_OP Expr
   88     | Expr OR_OP Expr .
   95 Call: Expr . '.' Identifier '(' Actuals ')'

    LE_OP   shift, and go to state 125
    GE_OP   shift, and go to state 126
    EQ_OP   shift, and go to state 127
    NE_OP   shift, and go to state 128
    AND_OP  shift, and go to state 129
    '<'     shift, and go to state 131
    '>'     shift, and go to state 132
    '+'     shift, and go to state 133
    '-'     shift, and go to state 134
    '*'     shift, and go to state 135
    '/'     shift, and go to state 136
    '%'     shift, and go to state 137
    '['     shift, and go to state 138
    '.'     shift, and go to state 139

    $default  reduce using rule 88 (Expr)


State 163

   13 LValue: Expr . '.' Identifier
   14       | Expr . '[' Expr ']'
   75 Expr: Expr . '+' Expr
   76     | Expr . '-' Expr
   77     | Expr . '*' Expr
   78     | Expr . '/' Expr
   79     | Expr . '%' Expr
   81     | Expr . '<' Expr
   81     | Expr '<' Expr .
   82     | Expr . LE_OP Expr
   83     | Expr . '>' Expr
   84     | Expr . GE_OP Expr
   85     | Expr . EQ_OP Expr
   86     | Expr . NE_OP Expr
   87     | Expr . AND_OP Expr
   88     | Expr . OR_OP Expr
   95 Call: Expr . '.' Identifier '(' Actuals ')'

    '+'  shift, and go to state 133
    '-'  shift, and go to state 134
    '*'  shift, and go to state 135
    '/'  shift, and go to state 136
    '%'  shift, and go to state 137
    '['  shift, and go to state 138
    '.'  shift, and go to state 139

    LE_OP  error (nonassociative)
    GE_OP  error (nonassociative)
    '<'    error (nonassociative)
    '>'    error (nonassociative)

    $default  reduce using rule 81 (Expr)


State 164

   13 LValue: Expr . '.' Identifier
   14       | Expr . '[' Expr ']'
   75 Expr: Expr . '+' Expr
   76     | Expr . '-' Expr
   77     | Expr . '*' Expr
   78     | Expr . '/' Expr
   79     | Expr . '%' Expr
   81     | Expr . '<' Expr
   82     | Expr . LE_OP Expr
   83     | Expr . '>' Expr
   83     | Expr '>' Expr .
   84     | Expr . GE_OP Expr
   85     | Expr . EQ_OP Expr
   86     | Expr . NE_OP Expr
   87     | Expr . AND_OP Expr
   88     | Expr . OR_OP Expr
   95 Call: Expr . '.' Identifier '(' Actuals ')'

    '+'  shift, and go to state 133
    '-'  shift, and go to state 134
    '*'  shift, and go to state 135
    '/'  shift, and go to state 136
    '%'  shift, and go to state 137
    '['  shift, and go to state 138
    '.'  shift, and go to state 139

    LE_OP  error (nonassociative)
    GE_OP  error (nonassociative)
    '<'    error (nonassociative)
    '>'    error (nonassociative)

    $default  reduce using rule 83 (Expr)


State 165

   13 LValue: Expr . '.' Identifier
   14       | Expr . '[' Expr ']'
   75 Expr: Expr . '+' Expr
   75     | Expr '+' Expr .
   76     | Expr . '-' Expr
   77     | Expr . '*' Expr
   78     | Expr . '/' Expr
   79     | Expr . '%' Expr
   81     | Expr . '<' Expr
   82     | Expr . LE_OP Expr
   83     | Expr . '>' Expr
   84     | Expr . GE_OP Expr
   85     | Expr . EQ_OP Expr
   86     | Expr . NE_OP Expr
   87     | Expr . AND_OP Expr
   88     | Expr . OR_OP Expr
   95 Call: Expr . '.' Identifier '(' Actuals ')'

    '*'  shift, and go to state 135
    '/'  shift, and go to state 136
    '%'  shift, and go to state 137
    '['  shift, and go to state 138
    '.'  shift, and go to state 139

    $default  reduce using rule 75 (Expr)


State 166

   13 LValue: Expr . '.' Identifier
   14       | Expr . '[' Expr ']'
   75 Expr: Expr . '+' Expr
   76     | Expr . '-' Expr
   76     | Expr '-' Expr .
   77     | Expr . '*' Expr
   78     | Expr . '/' Expr
   79     | Expr . '%' Expr
   81     | Expr . '<' Expr
   82     | Expr . LE_OP Expr
   83     | Expr . '>' Expr
   84     | Expr . GE_OP Expr
   85     | Expr . EQ_OP Expr
   86     | Expr . NE_OP Expr
   87     | Expr . AND_OP Expr
   88     | Expr . OR_OP Expr
   95 Call: Expr . '.' Identifier '(' Actuals ')'

    '*'  shift, and go to state 135
    '/'  shift, and go to state 136
    '%'  shift, and go to state 137
    '['  shift, and go to state 138
    '.'  shift, and go to state 139

    $default  reduce using rule 76 (Expr)


State 167

   13 LValue: Expr . '.' Identifier
   14       | Expr . '[' Expr ']'
   75 Expr: Expr . '+' Expr
   76     | Expr . '-' Expr
   77     | Expr . '*' Expr
   77     | Expr '*' Expr .
   78     | Expr . '/' Expr
   79     | Expr . '%' Expr
   81     | Expr . '<' Expr
   82     | Expr . LE_OP Expr
   83     | Expr . '>' Expr
   84     | Expr . GE_OP Expr
   85     | Expr . EQ_OP Expr
   86     | Expr . NE_OP Expr
   87     | Expr . AND_OP Expr
   88     | Expr . OR_OP Expr
   95 Call: Expr . '.' Identifier '(' Actuals ')'

    '['  shift, and go to state 138
    '.'  shift, and go to state 139

    $default  reduce using rule 77 (Expr)


State 168

   13 LValue: Expr . '.' Identifier
   14       | Expr . '[' Expr ']'
   75 Expr: Expr . '+' Expr
   76     | Expr . '-' Expr
   77     | Expr . '*' Expr
   78     | Expr . '/' Expr
   78     | Expr '/' Expr .
   79     | Expr . '%' Expr
   81     | Expr . '<' Expr
   82     | Expr . LE_OP Expr
   83     | Expr . '>' Expr
   84     | Expr . GE_OP Expr
   85     | Expr . EQ_OP Expr
   86     | Expr . NE_OP Expr
   87     | Expr . AND_OP Expr
   88     | Expr . OR_OP Expr
   95 Call: Expr . '.' Identifier '(' Actuals ')'

    '['  shift, and go to state 138
    '.'  shift, and go to state 139

    $default  reduce using rule 78 (Expr)


State 169

   13 LValue: Expr . '.' Identifier
   14       | Expr . '[' Expr ']'
   75 Expr: Expr . '+' Expr
   76     | Expr . '-' Expr
   77     | Expr . '*' Expr
   78     | Expr . '/' Expr
   79     | Expr . '%' Expr
   79     | Expr '%' Expr .
   81     | Expr . '<' Expr
   82     | Expr . LE_OP Expr
   83     | Expr . '>' Expr
   84     | Expr . GE_OP Expr
   85     | Expr . EQ_OP Expr
   86     | Expr . NE_OP Expr
   87     | Expr . AND_OP Expr
   88     | Expr . OR_OP Expr
   95 Call: Expr . '.' Identifier '(' Actuals ')'

    '['  shift, and go to state 138
    '.'  shift, and go to state 139

    $default  reduce using rule 79 (Expr)


State 170

   13 LValue: Expr . '.' Identifier
   14       | Expr . '[' Expr ']'
   14       | Expr '[' Expr . ']'
   75 Expr: Expr . '+' Expr
   76     | Expr . '-' Expr
   77     | Expr . '*' Expr
   78     | Expr . '/' Expr
   79     | Expr . '%' Expr
   81     | Expr . '<' Expr
   82     | Expr . LE_OP Expr
   83     | Expr . '>' Expr
   84     | Expr . GE_OP Expr
   85     | Expr . EQ_OP Expr
   86     | Expr . NE_OP Expr
   87     | Expr . AND_OP Expr
   88     | Expr . OR_OP Expr
   95 Call: Expr . '.' Identifier '(' Actuals ')'

    LE_OP   shift, and go to state 125
    GE_OP   shift, and go to state 126
    EQ_OP   shift, and go to state 127
    NE_OP   shift, and go to state 128
    AND_OP  shift, and go to state 129
    OR_OP   shift, and go to state 130
    '<'     shift, and go to state 131
    '>'     shift, and go to state 132
    '+'     shift, and go to state 133
    '-'     shift, and go to state 134
    '*'     shift, and go to state 135
    '/'     shift, and go to state 136
    '%'     shift, and go to state 137
    '['     shift, and go to state 138
    '.'     shift, and go to state 139
    ']'     shift, and go to state 182


State 171

   13 LValue: Expr '.' Identifier .
   95 Call: Expr '.' Identifier . '(' Actuals ')'

    '('  shift, and go to state 183

    $default  reduce using rule 13 (LValue)


State 172

   41 Prototype: VOID Identifier '(' Formals ')' ';' .

    $default  reduce using rule 41 (Prototype)


State 173

   40 Prototype: Type Identifier '(' Formals ')' ';' .

    $default  reduce using rule 40 (Prototype)


State 174

   13 LValue: Expr . '.' Identifier
   14       | Expr . '[' Expr ']'
   61 ForStmt: FOR '(' ';' Expr . ';' ')' Stmt
   63        | FOR '(' ';' Expr . ';' Expr ')' Stmt
   75 Expr: Expr . '+' Expr
   76     | Expr . '-' Expr
   77     | Expr . '*' Expr
   78     | Expr . '/' Expr
   79     | Expr . '%' Expr
   81     | Expr . '<' Expr
   82     | Expr . LE_OP Expr
   83     | Expr . '>' Expr
   84     | Expr . GE_OP Expr
   85     | Expr . EQ_OP Expr
   86     | Expr . NE_OP Expr
   87     | Expr . AND_OP Expr
   88     | Expr . OR_OP Expr
   95 Call: Expr . '.' Identifier '(' Actuals ')'

    LE_OP   shift, and go to state 125
    GE_OP   shift, and go to state 126
    EQ_OP   shift, and go to state 127
    NE_OP   shift, and go to state 128
    AND_OP  shift, and go to state 129
    OR_OP   shift, and go to state 130
    '<'     shift, and go to state 131
    '>'     shift, and go to state 132
    '+'     shift, and go to state 133
    '-'     shift, and go to state 134
    '*'     shift, and go to state 135
    '/'     shift, and go to state 136
    '%'     shift, and go to state 137
    '['     shift, and go to state 138
    '.'     shift, and go to state 139
    ';'     shift, and go to state 184


State 175

   62 ForStmt: FOR '(' Expr ';' . Expr ';' ')' Stmt
   64        | FOR '(' Expr ';' . Expr ';' Expr ')' Stmt

    NULLCONSTANT    shift, and go to state 69
    NEW             shift, and go to state 73
    THIS            shift, and go to state 75
    READINTEGER     shift, and go to state 78
    READLINE        shift, and go to state 79
    NEWARRAY        shift, and go to state 80
    NOT_OP          shift, and go to state 81
    IDENTIFIER      shift, and go to state 8
    STRING_LITERAL  shift, and go to state 82
    INTCONSTANT     shift, and go to state 83
    DOUBLECONSTANT  shift, and go to state 84
    BOOLCONSTANT    shift, and go to state 85
    '-'             shift, and go to state 86
    '('             shift, and go to state 88

    LValue      go to state 90
    Identifier  go to state 111
    Expr        go to state 185
    Call        go to state 102
    Constant    go to state 103


State 176

   58 IfStmt: IF '(' Expr ')' . Stmt
   59       | IF '(' Expr ')' . Stmt ELSE Stmt

    NULLCONSTANT    shift, and go to state 69
    BREAK           shift, and go to state 70
    FOR             shift, and go to state 71
    IF              shift, and go to state 72
    NEW             shift, and go to state 73
    RETURN          shift, and go to state 74
    THIS            shift, and go to state 75
    WHILE           shift, and go to state 76
    PRINT           shift, and go to state 77
    READINTEGER     shift, and go to state 78
    READLINE        shift, and go to state 79
    NEWARRAY        shift, and go to state 80
    NOT_OP          shift, and go to state 81
    IDENTIFIER      shift, and go to state 8
    STRING_LITERAL  shift, and go to state 82
    INTCONSTANT     shift, and go to state 83
    DOUBLECONSTANT  shift, and go to state 84
    BOOLCONSTANT    shift, and go to state 85
    '-'             shift, and go to state 86
    ';'             shift, and go to state 87
    '('             shift, and go to state 88
    '{'             shift, and go to state 54

    LValue      go to state 90
    Identifier  go to state 111
    StmtBlock   go to state 92
    Stmt        go to state 186
    IfStmt      go to state 95
    WhileStmt   go to state 96
    ForStmt     go to state 97
    ReturnStmt  go to state 98
    BreakStmt   go to state 99
    PrintStmt   go to state 100
    Expr        go to state 101
    Call        go to state 102
    Constant    go to state 103


State 177

   60 WhileStmt: WHILE '(' Expr ')' . Stmt

    NULLCONSTANT    shift, and go to state 69
    BREAK           shift, and go to state 70
    FOR             shift, and go to state 71
    IF              shift, and go to state 72
    NEW             shift, and go to state 73
    RETURN          shift, and go to state 74
    THIS            shift, and go to state 75
    WHILE           shift, and go to state 76
    PRINT           shift, and go to state 77
    READINTEGER     shift, and go to state 78
    READLINE        shift, and go to state 79
    NEWARRAY        shift, and go to state 80
    NOT_OP          shift, and go to state 81
    IDENTIFIER      shift, and go to state 8
    STRING_LITERAL  shift, and go to state 82
    INTCONSTANT     shift, and go to state 83
    DOUBLECONSTANT  shift, and go to state 84
    BOOLCONSTANT    shift, and go to state 85
    '-'             shift, and go to state 86
    ';'             shift, and go to state 87
    '('             shift, and go to state 88
    '{'             shift, and go to state 54

    LValue      go to state 90
    Identifier  go to state 111
    StmtBlock   go to state 92
    Stmt        go to state 187
    IfStmt      go to state 95
    WhileStmt   go to state 96
    ForStmt     go to state 97
    ReturnStmt  go to state 98
    BreakStmt   go to state 99
    PrintStmt   go to state 100
    Expr        go to state 101
    Call        go to state 102
    Constant    go to state 103


State 178

   68 PrintStmt: PRINT '(' ExprList ')' . ';'

    ';'  shift, and go to state 188


State 179

   57 ExprList: ExprList ',' . Expr

    NULLCONSTANT    shift, and go to state 69
    NEW             shift, and go to state 73
    THIS            shift, and go to state 75
    READINTEGER     shift, and go to state 78
    READLINE        shift, and go to state 79
    NEWARRAY        shift, and go to state 80
    NOT_OP          shift, and go to state 81
    IDENTIFIER      shift, and go to state 8
    STRING_LITERAL  shift, and go to state 82
    INTCONSTANT     shift, and go to state 83
    DOUBLECONSTANT  shift, and go to state 84
    BOOLCONSTANT    shift, and go to state 85
    '-'             shift, and go to state 86
    '('             shift, and go to state 88

    LValue      go to state 90
    Identifier  go to state 111
    Expr        go to state 189
    Call        go to state 102
    Constant    go to state 103


State 180

   93 Expr: NEWARRAY '(' Expr ',' . Type ')'

    INT         shift, and go to state 1
    DOUBLE      shift, and go to state 2
    BOOL        shift, and go to state 3
    STRING      shift, and go to state 4
    IDENTIFIER  shift, and go to state 8

    Type        go to state 190
    Identifier  go to state 15


State 181

   94 Call: Identifier '(' Actuals ')' .

    $default  reduce using rule 94 (Call)


State 182

   14 LValue: Expr '[' Expr ']' .

    $default  reduce using rule 14 (LValue)


State 183

   95 Call: Expr '.' Identifier '(' . Actuals ')'

    NULLCONSTANT    shift, and go to state 69
    NEW             shift, and go to state 73
    THIS            shift, and go to state 75
    READINTEGER     shift, and go to state 78
    READLINE        shift, and go to state 79
    NEWARRAY        shift, and go to state 80
    NOT_OP          shift, and go to state 81
    IDENTIFIER      shift, and go to state 8
    STRING_LITERAL  shift, and go to state 82
    INTCONSTANT     shift, and go to state 83
    DOUBLECONSTANT  shift, and go to state 84
    BOOLCONSTANT    shift, and go to state 85
    '-'             shift, and go to state 86
    '('             shift, and go to state 88

    $default  reduce using rule 96 (Actuals)

    LValue      go to state 90
    Identifier  go to state 111
    ExprList    go to state 155
    Expr        go to state 149
    Call        go to state 102
    Actuals     go to state 191
    Constant    go to state 103


State 184

   61 ForStmt: FOR '(' ';' Expr ';' . ')' Stmt
   63        | FOR '(' ';' Expr ';' . Expr ')' Stmt

    NULLCONSTANT    shift, and go to state 69
    NEW             shift, and go to state 73
    THIS            shift, and go to state 75
    READINTEGER     shift, and go to state 78
    READLINE        shift, and go to state 79
    NEWARRAY        shift, and go to state 80
    NOT_OP          shift, and go to state 81
    IDENTIFIER      shift, and go to state 8
    STRING_LITERAL  shift, and go to state 82
    INTCONSTANT     shift, and go to state 83
    DOUBLECONSTANT  shift, and go to state 84
    BOOLCONSTANT    shift, and go to state 85
    '-'             shift, and go to state 86
    ')'             shift, and go to state 192
    '('             shift, and go to state 88

    LValue      go to state 90
    Identifier  go to state 111
    Expr        go to state 193
    Call        go to state 102
    Constant    go to state 103


State 185

   13 LValue: Expr . '.' Identifier
   14       | Expr . '[' Expr ']'
   62 ForStmt: FOR '(' Expr ';' Expr . ';' ')' Stmt
   64        | FOR '(' Expr ';' Expr . ';' Expr ')' Stmt
   75 Expr: Expr . '+' Expr
   76     | Expr . '-' Expr
   77     | Expr . '*' Expr
   78     | Expr . '/' Expr
   79     | Expr . '%' Expr
   81     | Expr . '<' Expr
   82     | Expr . LE_OP Expr
   83     | Expr . '>' Expr
   84     | Expr . GE_OP Expr
   85     | Expr . EQ_OP Expr
   86     | Expr . NE_OP Expr
   87     | Expr . AND_OP Expr
   88     | Expr . OR_OP Expr
   95 Call: Expr . '.' Identifier '(' Actuals ')'

    LE_OP   shift, and go to state 125
    GE_OP   shift, and go to state 126
    EQ_OP   shift, and go to state 127
    NE_OP   shift, and go to state 128
    AND_OP  shift, and go to state 129
    OR_OP   shift, and go to state 130
    '<'     shift, and go to state 131
    '>'     shift, and go to state 132
    '+'     shift, and go to state 133
    '-'     shift, and go to state 134
    '*'     shift, and go to state 135
    '/'     shift, and go to state 136
    '%'     shift, and go to state 137
    '['     shift, and go to state 138
    '.'     shift, and go to state 139
    ';'     shift, and go to state 194


State 186

   58 IfStmt: IF '(' Expr ')' Stmt .
   59       | IF '(' Expr ')' Stmt . ELSE Stmt

    ELSE  shift, and go to state 195

    $default  reduce using rule 58 (IfStmt)


State 187

   60 WhileStmt: WHILE '(' Expr ')' Stmt .

    $default  reduce using rule 60 (WhileStmt)


State 188

   68 PrintStmt: PRINT '(' ExprList ')' ';' .

    $default  reduce using rule 68 (PrintStmt)


State 189

   13 LValue: Expr . '.' Identifier
   14       | Expr . '[' Expr ']'
   57 ExprList: ExprList ',' Expr .
   75 Expr: Expr . '+' Expr
   76     | Expr . '-' Expr
   77     | Expr . '*' Expr
   78     | Expr . '/' Expr
   79     | Expr . '%' Expr
   81     | Expr . '<' Expr
   82     | Expr . LE_OP Expr
   83     | Expr . '>' Expr
   84     | Expr . GE_OP Expr
   85     | Expr . EQ_OP Expr
   86     | Expr . NE_OP Expr
   87     | Expr . AND_OP Expr
   88     | Expr . OR_OP Expr
   95 Call: Expr . '.' Identifier '(' Actuals ')'

    LE_OP   shift, and go to state 125
    GE_OP   shift, and go to state 126
    EQ_OP   shift, and go to state 127
    NE_OP   shift, and go to state 128
    AND_OP  shift, and go to state 129
    OR_OP   shift, and go to state 130
    '<'     shift, and go to state 131
    '>'     shift, and go to state 132
    '+'     shift, and go to state 133
    '-'     shift, and go to state 134
    '*'     shift, and go to state 135
    '/'     shift, and go to state 136
    '%'     shift, and go to state 137
    '['     shift, and go to state 138
    '.'     shift, and go to state 139

    $default  reduce using rule 57 (ExprList)


State 190

   20 Type: Type . '[' ']'
   93 Expr: NEWARRAY '(' Expr ',' Type . ')'

    '['  shift, and go to state 25
    ')'  shift, and go to state 196


State 191

   95 Call: Expr '.' Identifier '(' Actuals . ')'

    ')'  shift, and go to state 197


State 192

   61 ForStmt: FOR '(' ';' Expr ';' ')' . Stmt

    NULLCONSTANT    shift, and go to state 69
    BREAK           shift, and go to state 70
    FOR             shift, and go to state 71
    IF              shift, and go to state 72
    NEW             shift, and go to state 73
    RETURN          shift, and go to state 74
    THIS            shift, and go to state 75
    WHILE           shift, and go to state 76
    PRINT           shift, and go to state 77
    READINTEGER     shift, and go to state 78
    READLINE        shift, and go to state 79
    NEWARRAY        shift, and go to state 80
    NOT_OP          shift, and go to state 81
    IDENTIFIER      shift, and go to state 8
    STRING_LITERAL  shift, and go to state 82
    INTCONSTANT     shift, and go to state 83
    DOUBLECONSTANT  shift, and go to state 84
    BOOLCONSTANT    shift, and go to state 85
    '-'             shift, and go to state 86
    ';'             shift, and go to state 87
    '('             shift, and go to state 88
    '{'             shift, and go to state 54

    LValue      go to state 90
    Identifier  go to state 111
    StmtBlock   go to state 92
    Stmt        go to state 198
    IfStmt      go to state 95
    WhileStmt   go to state 96
    ForStmt     go to state 97
    ReturnStmt  go to state 98
    BreakStmt   go to state 99
    PrintStmt   go to state 100
    Expr        go to state 101
    Call        go to state 102
    Constant    go to state 103


State 193

   13 LValue: Expr . '.' Identifier
   14       | Expr . '[' Expr ']'
   63 ForStmt: FOR '(' ';' Expr ';' Expr . ')' Stmt
   75 Expr: Expr . '+' Expr
   76     | Expr . '-' Expr
   77     | Expr . '*' Expr
   78     | Expr . '/' Expr
   79     | Expr . '%' Expr
   81     | Expr . '<' Expr
   82     | Expr . LE_OP Expr
   83     | Expr . '>' Expr
   84     | Expr . GE_OP Expr
   85     | Expr . EQ_OP Expr
   86     | Expr . NE_OP Expr
   87     | Expr . AND_OP Expr
   88     | Expr . OR_OP Expr
   95 Call: Expr . '.' Identifier '(' Actuals ')'

    LE_OP   shift, and go to state 125
    GE_OP   shift, and go to state 126
    EQ_OP   shift, and go to state 127
    NE_OP   shift, and go to state 128
    AND_OP  shift, and go to state 129
    OR_OP   shift, and go to state 130
    '<'     shift, and go to state 131
    '>'     shift, and go to state 132
    '+'     shift, and go to state 133
    '-'     shift, and go to state 134
    '*'     shift, and go to state 135
    '/'     shift, and go to state 136
    '%'     shift, and go to state 137
    '['     shift, and go to state 138
    '.'     shift, and go to state 139
    ')'     shift, and go to state 199


State 194

   62 ForStmt: FOR '(' Expr ';' Expr ';' . ')' Stmt
   64        | FOR '(' Expr ';' Expr ';' . Expr ')' Stmt

    NULLCONSTANT    shift, and go to state 69
    NEW             shift, and go to state 73
    THIS            shift, and go to state 75
    READINTEGER     shift, and go to state 78
    READLINE        shift, and go to state 79
    NEWARRAY        shift, and go to state 80
    NOT_OP          shift, and go to state 81
    IDENTIFIER      shift, and go to state 8
    STRING_LITERAL  shift, and go to state 82
    INTCONSTANT     shift, and go to state 83
    DOUBLECONSTANT  shift, and go to state 84
    BOOLCONSTANT    shift, and go to state 85
    '-'             shift, and go to state 86
    ')'             shift, and go to state 200
    '('             shift, and go to state 88

    LValue      go to state 90
    Identifier  go to state 111
    Expr        go to state 201
    Call        go to state 102
    Constant    go to state 103


State 195

   59 IfStmt: IF '(' Expr ')' Stmt ELSE . Stmt

    NULLCONSTANT    shift, and go to state 69
    BREAK           shift, and go to state 70
    FOR             shift, and go to state 71
    IF              shift, and go to state 72
    NEW             shift, and go to state 73
    RETURN          shift, and go to state 74
    THIS            shift, and go to state 75
    WHILE           shift, and go to state 76
    PRINT           shift, and go to state 77
    READINTEGER     shift, and go to state 78
    READLINE        shift, and go to state 79
    NEWARRAY        shift, and go to state 80
    NOT_OP          shift, and go to state 81
    IDENTIFIER      shift, and go to state 8
    STRING_LITERAL  shift, and go to state 82
    INTCONSTANT     shift, and go to state 83
    DOUBLECONSTANT  shift, and go to state 84
    BOOLCONSTANT    shift, and go to state 85
    '-'             shift, and go to state 86
    ';'             shift, and go to state 87
    '('             shift, and go to state 88
    '{'             shift, and go to state 54

    LValue      go to state 90
    Identifier  go to state 111
    StmtBlock   go to state 92
    Stmt        go to state 202
    IfStmt      go to state 95
    WhileStmt   go to state 96
    ForStmt     go to state 97
    ReturnStmt  go to state 98
    BreakStmt   go to state 99
    PrintStmt   go to state 100
    Expr        go to state 101
    Call        go to state 102
    Constant    go to state 103


State 196

   93 Expr: NEWARRAY '(' Expr ',' Type ')' .

    $default  reduce using rule 93 (Expr)


State 197

   95 Call: Expr '.' Identifier '(' Actuals ')' .

    $default  reduce using rule 95 (Call)


State 198

   61 ForStmt: FOR '(' ';' Expr ';' ')' Stmt .

    $default  reduce using rule 61 (ForStmt)


State 199

   63 ForStmt: FOR '(' ';' Expr ';' Expr ')' . Stmt

    NULLCONSTANT    shift, and go to state 69
    BREAK           shift, and go to state 70
    FOR             shift, and go to state 71
    IF              shift, and go to state 72
    NEW             shift, and go to state 73
    RETURN          shift, and go to state 74
    THIS            shift, and go to state 75
    WHILE           shift, and go to state 76
    PRINT           shift, and go to state 77
    READINTEGER     shift, and go to state 78
    READLINE        shift, and go to state 79
    NEWARRAY        shift, and go to state 80
    NOT_OP          shift, and go to state 81
    IDENTIFIER      shift, and go to state 8
    STRING_LITERAL  shift, and go to state 82
    INTCONSTANT     shift, and go to state 83
    DOUBLECONSTANT  shift, and go to state 84
    BOOLCONSTANT    shift, and go to state 85
    '-'             shift, and go to state 86
    ';'             shift, and go to state 87
    '('             shift, and go to state 88
    '{'             shift, and go to state 54

    LValue      go to state 90
    Identifier  go to state 111
    StmtBlock   go to state 92
    Stmt        go to state 203
    IfStmt      go to state 95
    WhileStmt   go to state 96
    ForStmt     go to state 97
    ReturnStmt  go to state 98
    BreakStmt   go to state 99
    PrintStmt   go to state 100
    Expr        go to state 101
    Call        go to state 102
    Constant    go to state 103


State 200

   62 ForStmt: FOR '(' Expr ';' Expr ';' ')' . Stmt

    NULLCONSTANT    shift, and go to state 69
    BREAK           shift, and go to state 70
    FOR             shift, and go to state 71
    IF              shift, and go to state 72
    NEW             shift, and go to state 73
    RETURN          shift, and go to state 74
    THIS            shift, and go to state 75
    WHILE           shift, and go to state 76
    PRINT           shift, and go to state 77
    READINTEGER     shift, and go to state 78
    READLINE        shift, and go to state 79
    NEWARRAY        shift, and go to state 80
    NOT_OP          shift, and go to state 81
    IDENTIFIER      shift, and go to state 8
    STRING_LITERAL  shift, and go to state 82
    INTCONSTANT     shift, and go to state 83
    DOUBLECONSTANT  shift, and go to state 84
    BOOLCONSTANT    shift, and go to state 85
    '-'             shift, and go to state 86
    ';'             shift, and go to state 87
    '('             shift, and go to state 88
    '{'             shift, and go to state 54

    LValue      go to state 90
    Identifier  go to state 111
    StmtBlock   go to state 92
    Stmt        go to state 204
    IfStmt      go to state 95
    WhileStmt   go to state 96
    ForStmt     go to state 97
    ReturnStmt  go to state 98
    BreakStmt   go to state 99
    PrintStmt   go to state 100
    Expr        go to state 101
    Call        go to state 102
    Constant    go to state 103


State 201

   13 LValue: Expr . '.' Identifier
   14       | Expr . '[' Expr ']'
   64 ForStmt: FOR '(' Expr ';' Expr ';' Expr . ')' Stmt
   75 Expr: Expr . '+' Expr
   76     | Expr . '-' Expr
   77     | Expr . '*' Expr
   78     | Expr . '/' Expr
   79     | Expr . '%' Expr
   81     | Expr . '<' Expr
   82     | Expr . LE_OP Expr
   83     | Expr . '>' Expr
   84     | Expr . GE_OP Expr
   85     | Expr . EQ_OP Expr
   86     | Expr . NE_OP Expr
   87     | Expr . AND_OP Expr
   88     | Expr . OR_OP Expr
   95 Call: Expr . '.' Identifier '(' Actuals ')'

    LE_OP   shift, and go to state 125
    GE_OP   shift, and go to state 126
    EQ_OP   shift, and go to state 127
    NE_OP   shift, and go to state 128
    AND_OP  shift, and go to state 129
    OR_OP   shift, and go to state 130
    '<'     shift, and go to state 131
    '>'     shift, and go to state 132
    '+'     shift, and go to state 133
    '-'     shift, and go to state 134
    '*'     shift, and go to state 135
    '/'     shift, and go to state 136
    '%'     shift, and go to state 137
    '['     shift, and go to state 138
    '.'     shift, and go to state 139
    ')'     shift, and go to state 205


State 202

   59 IfStmt: IF '(' Expr ')' Stmt ELSE Stmt .

    $default  reduce using rule 59 (IfStmt)


State 203

   63 ForStmt: FOR '(' ';' Expr ';' Expr ')' Stmt .

    $default  reduce using rule 63 (ForStmt)


State 204

   62 ForStmt: FOR '(' Expr ';' Expr ';' ')' Stmt .

    $default  reduce using rule 62 (ForStmt)


State 205

   64 ForStmt: FOR '(' Expr ';' Expr ';' Expr ')' . Stmt

    NULLCONSTANT    shift, and go to state 69
    BREAK           shift, and go to state 70
    FOR             shift, and go to state 71
    IF              shift, and go to state 72
    NEW             shift, and go to state 73
    RETURN          shift, and go to state 74
    THIS            shift, and go to state 75
    WHILE           shift, and go to state 76
    PRINT           shift, and go to state 77
    READINTEGER     shift, and go to state 78
    READLINE        shift, and go to state 79
    NEWARRAY        shift, and go to state 80
    NOT_OP          shift, and go to state 81
    IDENTIFIER      shift, and go to state 8
    STRING_LITERAL  shift, and go to state 82
    INTCONSTANT     shift, and go to state 83
    DOUBLECONSTANT  shift, and go to state 84
    BOOLCONSTANT    shift, and go to state 85
    '-'             shift, and go to state 86
    ';'             shift, and go to state 87
    '('             shift, and go to state 88
    '{'             shift, and go to state 54

    LValue      go to state 90
    Identifier  go to state 111
    StmtBlock   go to state 92
    Stmt        go to state 206
    IfStmt      go to state 95
    WhileStmt   go to state 96
    ForStmt     go to state 97
    ReturnStmt  go to state 98
    BreakStmt   go to state 99
    PrintStmt   go to state 100
    Expr        go to state 101
    Call        go to state 102
    Constant    go to state 103


State 206

   64 ForStmt: FOR '(' Expr ';' Expr ';' Expr ')' Stmt .

    $default  reduce using rule 64 (ForStmt)
