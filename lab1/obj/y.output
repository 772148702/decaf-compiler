Grammar

    0 $accept: Program $end

    1 Program: DeclList

    2 DeclList: DeclList Decl
    3         | Decl

    4 Decl: ClassDef

    5 VariableDef: Variable ';'

    6 Variable: Type IDENTIFIER

    7 VariableList: Variable
    8             | VariableList ',' Variable

    9 Type: INT
   10     | BOOL
   11     | STRING
   12     | VOID
   13     | CLASS IDENTIFIER
   14     | Type '[' ']'

   15 Formals: %empty
   16        | VariableList

   17 FunctionDef: Type IDENTIFIER '(' Formals ')' StmtBlock
   18            | STATIC Type IDENTIFIER '(' Formals ')' StmtBlock

   19 ClassDef: CLASS IDENTIFIER ExtendsClause '{' FieldList '}'

   20 ExtendsClause: %empty
   21              | EXTENDS IDENTIFIER

   22 FieldList: %empty
   23          | FieldList Field

   24 Field: VariableDef
   25      | FunctionDef

   26 StmtBlock: '{' StmtList '}'
   27          | '{' VariableList ';' StmtList '}'

   28 StmtList: %empty
   29         | StmtList Stmt

   30 Stmt: SimpleStmt ';'
   31     | IfStmt
   32     | WhileStmt
   33     | ForStmt
   34     | BreakStmt ';'
   35     | ReturnStmt ';'
   36     | PrintStmt ';'
   37     | StmtBlock

   38 SimpleStmt: LValue '=' Expr
   39           | Call
   40           | %empty

   41 LValue: IDENTIFIER
   42       | Expr '.' IDENTIFIER
   43       | Expr '[' Expr ']'

   44 Call: IDENTIFIER '(' Actuals ')'
   45     | Expr '.' IDENTIFIER '(' Actuals ')'

   46 Actuals: %empty
   47        | ExprList

   48 ExprList: Expr
   49         | ExprList ',' Expr

   50 ForStmt: FOR '(' SimpleStmt ';' BoolExpr ';' SimpleStmt ')' Stmt

   51 WhileStmt: WHILE '(' BoolExpr ')' Stmt

   52 IfStmt: IF '(' BoolExpr ')' Stmt
   53       | IF '(' BoolExpr ')' Stmt ELSE Stmt

   54 ReturnStmt: RETURN
   55           | RETURN Expr

   56 BreakStmt: BREAK

   57 PrintStmt: PRINT '(' ExprList ')'

   58 BoolExpr: Expr

   59 Expr: Constant
   60     | LValue
   61     | THIS
   62     | Call
   63     | '(' Expr ')'
   64     | Expr '+' Expr
   65     | Expr '-' Expr
   66     | Expr '*' Expr
   67     | Expr '/' Expr
   68     | Expr '%' Expr
   69     | '-' Expr
   70     | Expr '<' Expr
   71     | Expr LE_OP Expr
   72     | Expr '>' Expr
   73     | Expr GE_OP Expr
   74     | Expr EQ_OP Expr
   75     | Expr NE_OP Expr
   76     | Expr AND_OP Expr
   77     | Expr OR_OP Expr
   78     | NOT_OP Expr
   79     | READINTEGER '(' ')'
   80     | READLINE '(' ')'
   81     | NEW IDENTIFIER '(' ')'
   82     | NEW Type '[' Expr ']'
   83     | INSTANCEOF '(' Expr ',' IDENTIFIER ')'
   84     | '(' CLASS IDENTIFIER ')' Expr

   85 Constant: INTCONSTANT
   86         | DOUBLECONSTANT
   87         | BOOLCONSTANT
   88         | STRING_LITERAL
   89         | NULLCONSTANT


Terminals, with rules where they appear

$end (0) 0
'%' (37) 68
'(' (40) 17 18 44 45 50 51 52 53 57 63 79 80 81 83 84
')' (41) 17 18 44 45 50 51 52 53 57 63 79 80 81 83 84
'*' (42) 66
'+' (43) 64
',' (44) 8 49 83
'-' (45) 65 69
'.' (46) 42 45
'/' (47) 67
';' (59) 5 27 30 34 35 36 50
'<' (60) 70
'=' (61) 38
'>' (62) 72
'[' (91) 14 43 82
']' (93) 14 43 82
'{' (123) 19 26 27
'}' (125) 19 26 27
error (256)
INT (258) 9
BOOL (259) 10
STRING (260) 11
VOID (261) 12
NULLCONSTANT (262) 89
BREAK (263) 56
CLASS (264) 13 19 84
ELSE (265) 53
EXTENDS (266) 21
FOR (267) 50
IF (268) 52 53
NEW (269) 81 82
RETURN (270) 54 55
THIS (271) 61
WHILE (272) 51
STATIC (273) 18
PRINT (274) 57
READINTEGER (275) 79
READLINE (276) 80
INSTANCEOF (277) 83
LE_OP (278) 71
GE_OP (279) 73
EQ_OP (280) 74
NE_OP (281) 75
AND_OP (282) 76
OR_OP (283) 77
NOT_OP (284) 78
IDENTIFIER (285) 6 13 17 18 19 21 41 42 44 45 81 83 84
STRING_LITERAL (286) 88
INTCONSTANT (287) 85
DOUBLECONSTANT (288) 86
BOOLCONSTANT (289) 87
UMINUS (290)
NOELSE (291)


Nonterminals, with rules where they appear

$accept (54)
    on left: 0
Program (55)
    on left: 1, on right: 0
DeclList (56)
    on left: 2 3, on right: 1 2
Decl (57)
    on left: 4, on right: 2 3
VariableDef (58)
    on left: 5, on right: 24
Variable (59)
    on left: 6, on right: 5 7 8
VariableList (60)
    on left: 7 8, on right: 8 16 27
Type (61)
    on left: 9 10 11 12 13 14, on right: 6 14 17 18 82
Formals (62)
    on left: 15 16, on right: 17 18
FunctionDef (63)
    on left: 17 18, on right: 25
ClassDef (64)
    on left: 19, on right: 4
ExtendsClause (65)
    on left: 20 21, on right: 19
FieldList (66)
    on left: 22 23, on right: 19 23
Field (67)
    on left: 24 25, on right: 23
StmtBlock (68)
    on left: 26 27, on right: 17 18 37
StmtList (69)
    on left: 28 29, on right: 26 27 29
Stmt (70)
    on left: 30 31 32 33 34 35 36 37, on right: 29 50 51 52 53
SimpleStmt (71)
    on left: 38 39 40, on right: 30 50
LValue (72)
    on left: 41 42 43, on right: 38 60
Call (73)
    on left: 44 45, on right: 39 62
Actuals (74)
    on left: 46 47, on right: 44 45
ExprList (75)
    on left: 48 49, on right: 47 49 57
ForStmt (76)
    on left: 50, on right: 33
WhileStmt (77)
    on left: 51, on right: 32
IfStmt (78)
    on left: 52 53, on right: 31
ReturnStmt (79)
    on left: 54 55, on right: 35
BreakStmt (80)
    on left: 56, on right: 34
PrintStmt (81)
    on left: 57, on right: 36
BoolExpr (82)
    on left: 58, on right: 50 51 52 53
Expr (83)
    on left: 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76
    77 78 79 80 81 82 83 84, on right: 38 42 43 45 48 49 55 58 63 64
    65 66 67 68 69 70 71 72 73 74 75 76 77 78 82 83 84
Constant (84)
    on left: 85 86 87 88 89, on right: 59


State 0

    0 $accept: . Program $end

    CLASS  shift, and go to state 1

    Program   go to state 2
    DeclList  go to state 3
    Decl      go to state 4
    ClassDef  go to state 5


State 1

   19 ClassDef: CLASS . IDENTIFIER ExtendsClause '{' FieldList '}'

    IDENTIFIER  shift, and go to state 6


State 2

    0 $accept: Program . $end

    $end  shift, and go to state 7


State 3

    1 Program: DeclList .
    2 DeclList: DeclList . Decl

    CLASS  shift, and go to state 1

    $default  reduce using rule 1 (Program)

    Decl      go to state 8
    ClassDef  go to state 5


State 4

    3 DeclList: Decl .

    $default  reduce using rule 3 (DeclList)


State 5

    4 Decl: ClassDef .

    $default  reduce using rule 4 (Decl)


State 6

   19 ClassDef: CLASS IDENTIFIER . ExtendsClause '{' FieldList '}'

    EXTENDS  shift, and go to state 9

    $default  reduce using rule 20 (ExtendsClause)

    ExtendsClause  go to state 10


State 7

    0 $accept: Program $end .

    $default  accept


State 8

    2 DeclList: DeclList Decl .

    $default  reduce using rule 2 (DeclList)


State 9

   21 ExtendsClause: EXTENDS . IDENTIFIER

    IDENTIFIER  shift, and go to state 11


State 10

   19 ClassDef: CLASS IDENTIFIER ExtendsClause . '{' FieldList '}'

    '{'  shift, and go to state 12


State 11

   21 ExtendsClause: EXTENDS IDENTIFIER .

    $default  reduce using rule 21 (ExtendsClause)


State 12

   19 ClassDef: CLASS IDENTIFIER ExtendsClause '{' . FieldList '}'

    $default  reduce using rule 22 (FieldList)

    FieldList  go to state 13


State 13

   19 ClassDef: CLASS IDENTIFIER ExtendsClause '{' FieldList . '}'
   23 FieldList: FieldList . Field

    INT     shift, and go to state 14
    BOOL    shift, and go to state 15
    STRING  shift, and go to state 16
    VOID    shift, and go to state 17
    CLASS   shift, and go to state 18
    STATIC  shift, and go to state 19
    '}'     shift, and go to state 20

    VariableDef  go to state 21
    Variable     go to state 22
    Type         go to state 23
    FunctionDef  go to state 24
    Field        go to state 25


State 14

    9 Type: INT .

    $default  reduce using rule 9 (Type)


State 15

   10 Type: BOOL .

    $default  reduce using rule 10 (Type)


State 16

   11 Type: STRING .

    $default  reduce using rule 11 (Type)


State 17

   12 Type: VOID .

    $default  reduce using rule 12 (Type)


State 18

   13 Type: CLASS . IDENTIFIER

    IDENTIFIER  shift, and go to state 26


State 19

   18 FunctionDef: STATIC . Type IDENTIFIER '(' Formals ')' StmtBlock

    INT     shift, and go to state 14
    BOOL    shift, and go to state 15
    STRING  shift, and go to state 16
    VOID    shift, and go to state 17
    CLASS   shift, and go to state 18

    Type  go to state 27


State 20

   19 ClassDef: CLASS IDENTIFIER ExtendsClause '{' FieldList '}' .

    $default  reduce using rule 19 (ClassDef)


State 21

   24 Field: VariableDef .

    $default  reduce using rule 24 (Field)


State 22

    5 VariableDef: Variable . ';'

    ';'  shift, and go to state 28


State 23

    6 Variable: Type . IDENTIFIER
   14 Type: Type . '[' ']'
   17 FunctionDef: Type . IDENTIFIER '(' Formals ')' StmtBlock

    IDENTIFIER  shift, and go to state 29
    '['         shift, and go to state 30


State 24

   25 Field: FunctionDef .

    $default  reduce using rule 25 (Field)


State 25

   23 FieldList: FieldList Field .

    $default  reduce using rule 23 (FieldList)


State 26

   13 Type: CLASS IDENTIFIER .

    $default  reduce using rule 13 (Type)


State 27

   14 Type: Type . '[' ']'
   18 FunctionDef: STATIC Type . IDENTIFIER '(' Formals ')' StmtBlock

    IDENTIFIER  shift, and go to state 31
    '['         shift, and go to state 30


State 28

    5 VariableDef: Variable ';' .

    $default  reduce using rule 5 (VariableDef)


State 29

    6 Variable: Type IDENTIFIER .
   17 FunctionDef: Type IDENTIFIER . '(' Formals ')' StmtBlock

    '('  shift, and go to state 32

    $default  reduce using rule 6 (Variable)


State 30

   14 Type: Type '[' . ']'

    ']'  shift, and go to state 33


State 31

   18 FunctionDef: STATIC Type IDENTIFIER . '(' Formals ')' StmtBlock

    '('  shift, and go to state 34


State 32

   17 FunctionDef: Type IDENTIFIER '(' . Formals ')' StmtBlock

    INT     shift, and go to state 14
    BOOL    shift, and go to state 15
    STRING  shift, and go to state 16
    VOID    shift, and go to state 17
    CLASS   shift, and go to state 18

    $default  reduce using rule 15 (Formals)

    Variable      go to state 35
    VariableList  go to state 36
    Type          go to state 37
    Formals       go to state 38


State 33

   14 Type: Type '[' ']' .

    $default  reduce using rule 14 (Type)


State 34

   18 FunctionDef: STATIC Type IDENTIFIER '(' . Formals ')' StmtBlock

    INT     shift, and go to state 14
    BOOL    shift, and go to state 15
    STRING  shift, and go to state 16
    VOID    shift, and go to state 17
    CLASS   shift, and go to state 18

    $default  reduce using rule 15 (Formals)

    Variable      go to state 35
    VariableList  go to state 36
    Type          go to state 37
    Formals       go to state 39


State 35

    7 VariableList: Variable .

    $default  reduce using rule 7 (VariableList)


State 36

    8 VariableList: VariableList . ',' Variable
   16 Formals: VariableList .

    ','  shift, and go to state 40

    $default  reduce using rule 16 (Formals)


State 37

    6 Variable: Type . IDENTIFIER
   14 Type: Type . '[' ']'

    IDENTIFIER  shift, and go to state 41
    '['         shift, and go to state 30


State 38

   17 FunctionDef: Type IDENTIFIER '(' Formals . ')' StmtBlock

    ')'  shift, and go to state 42


State 39

   18 FunctionDef: STATIC Type IDENTIFIER '(' Formals . ')' StmtBlock

    ')'  shift, and go to state 43


State 40

    8 VariableList: VariableList ',' . Variable

    INT     shift, and go to state 14
    BOOL    shift, and go to state 15
    STRING  shift, and go to state 16
    VOID    shift, and go to state 17
    CLASS   shift, and go to state 18

    Variable  go to state 44
    Type      go to state 37


State 41

    6 Variable: Type IDENTIFIER .

    $default  reduce using rule 6 (Variable)


State 42

   17 FunctionDef: Type IDENTIFIER '(' Formals ')' . StmtBlock

    '{'  shift, and go to state 45

    StmtBlock  go to state 46


State 43

   18 FunctionDef: STATIC Type IDENTIFIER '(' Formals ')' . StmtBlock

    '{'  shift, and go to state 45

    StmtBlock  go to state 47


State 44

    8 VariableList: VariableList ',' Variable .

    $default  reduce using rule 8 (VariableList)


State 45

   26 StmtBlock: '{' . StmtList '}'
   27          | '{' . VariableList ';' StmtList '}'

    INT     shift, and go to state 14
    BOOL    shift, and go to state 15
    STRING  shift, and go to state 16
    VOID    shift, and go to state 17
    CLASS   shift, and go to state 18

    $default  reduce using rule 28 (StmtList)

    Variable      go to state 35
    VariableList  go to state 48
    Type          go to state 37
    StmtList      go to state 49


State 46

   17 FunctionDef: Type IDENTIFIER '(' Formals ')' StmtBlock .

    $default  reduce using rule 17 (FunctionDef)


State 47

   18 FunctionDef: STATIC Type IDENTIFIER '(' Formals ')' StmtBlock .

    $default  reduce using rule 18 (FunctionDef)


State 48

    8 VariableList: VariableList . ',' Variable
   27 StmtBlock: '{' VariableList . ';' StmtList '}'

    ';'  shift, and go to state 50
    ','  shift, and go to state 40


State 49

   26 StmtBlock: '{' StmtList . '}'
   29 StmtList: StmtList . Stmt

    NULLCONSTANT    shift, and go to state 51
    BREAK           shift, and go to state 52
    FOR             shift, and go to state 53
    IF              shift, and go to state 54
    NEW             shift, and go to state 55
    RETURN          shift, and go to state 56
    THIS            shift, and go to state 57
    WHILE           shift, and go to state 58
    PRINT           shift, and go to state 59
    READINTEGER     shift, and go to state 60
    READLINE        shift, and go to state 61
    INSTANCEOF      shift, and go to state 62
    NOT_OP          shift, and go to state 63
    IDENTIFIER      shift, and go to state 64
    STRING_LITERAL  shift, and go to state 65
    INTCONSTANT     shift, and go to state 66
    DOUBLECONSTANT  shift, and go to state 67
    BOOLCONSTANT    shift, and go to state 68
    '-'             shift, and go to state 69
    '('             shift, and go to state 70
    '{'             shift, and go to state 45
    '}'             shift, and go to state 71

    $default  reduce using rule 40 (SimpleStmt)

    StmtBlock   go to state 72
    Stmt        go to state 73
    SimpleStmt  go to state 74
    LValue      go to state 75
    Call        go to state 76
    ForStmt     go to state 77
    WhileStmt   go to state 78
    IfStmt      go to state 79
    ReturnStmt  go to state 80
    BreakStmt   go to state 81
    PrintStmt   go to state 82
    Expr        go to state 83
    Constant    go to state 84


State 50

   27 StmtBlock: '{' VariableList ';' . StmtList '}'

    $default  reduce using rule 28 (StmtList)

    StmtList  go to state 85


State 51

   89 Constant: NULLCONSTANT .

    $default  reduce using rule 89 (Constant)


State 52

   56 BreakStmt: BREAK .

    $default  reduce using rule 56 (BreakStmt)


State 53

   50 ForStmt: FOR . '(' SimpleStmt ';' BoolExpr ';' SimpleStmt ')' Stmt

    '('  shift, and go to state 86


State 54

   52 IfStmt: IF . '(' BoolExpr ')' Stmt
   53       | IF . '(' BoolExpr ')' Stmt ELSE Stmt

    '('  shift, and go to state 87


State 55

   81 Expr: NEW . IDENTIFIER '(' ')'
   82     | NEW . Type '[' Expr ']'

    INT         shift, and go to state 14
    BOOL        shift, and go to state 15
    STRING      shift, and go to state 16
    VOID        shift, and go to state 17
    CLASS       shift, and go to state 18
    IDENTIFIER  shift, and go to state 88

    Type  go to state 89


State 56

   54 ReturnStmt: RETURN .
   55           | RETURN . Expr

    NULLCONSTANT    shift, and go to state 51
    NEW             shift, and go to state 55
    THIS            shift, and go to state 57
    READINTEGER     shift, and go to state 60
    READLINE        shift, and go to state 61
    INSTANCEOF      shift, and go to state 62
    NOT_OP          shift, and go to state 63
    IDENTIFIER      shift, and go to state 64
    STRING_LITERAL  shift, and go to state 65
    INTCONSTANT     shift, and go to state 66
    DOUBLECONSTANT  shift, and go to state 67
    BOOLCONSTANT    shift, and go to state 68
    '-'             shift, and go to state 69
    '('             shift, and go to state 70

    $default  reduce using rule 54 (ReturnStmt)

    LValue    go to state 90
    Call      go to state 91
    Expr      go to state 92
    Constant  go to state 84


State 57

   61 Expr: THIS .

    $default  reduce using rule 61 (Expr)


State 58

   51 WhileStmt: WHILE . '(' BoolExpr ')' Stmt

    '('  shift, and go to state 93


State 59

   57 PrintStmt: PRINT . '(' ExprList ')'

    '('  shift, and go to state 94


State 60

   79 Expr: READINTEGER . '(' ')'

    '('  shift, and go to state 95


State 61

   80 Expr: READLINE . '(' ')'

    '('  shift, and go to state 96


State 62

   83 Expr: INSTANCEOF . '(' Expr ',' IDENTIFIER ')'

    '('  shift, and go to state 97


State 63

   78 Expr: NOT_OP . Expr

    NULLCONSTANT    shift, and go to state 51
    NEW             shift, and go to state 55
    THIS            shift, and go to state 57
    READINTEGER     shift, and go to state 60
    READLINE        shift, and go to state 61
    INSTANCEOF      shift, and go to state 62
    NOT_OP          shift, and go to state 63
    IDENTIFIER      shift, and go to state 64
    STRING_LITERAL  shift, and go to state 65
    INTCONSTANT     shift, and go to state 66
    DOUBLECONSTANT  shift, and go to state 67
    BOOLCONSTANT    shift, and go to state 68
    '-'             shift, and go to state 69
    '('             shift, and go to state 70

    LValue    go to state 90
    Call      go to state 91
    Expr      go to state 98
    Constant  go to state 84


State 64

   41 LValue: IDENTIFIER .
   44 Call: IDENTIFIER . '(' Actuals ')'

    '('  shift, and go to state 99

    $default  reduce using rule 41 (LValue)


State 65

   88 Constant: STRING_LITERAL .

    $default  reduce using rule 88 (Constant)


State 66

   85 Constant: INTCONSTANT .

    $default  reduce using rule 85 (Constant)


State 67

   86 Constant: DOUBLECONSTANT .

    $default  reduce using rule 86 (Constant)


State 68

   87 Constant: BOOLCONSTANT .

    $default  reduce using rule 87 (Constant)


State 69

   69 Expr: '-' . Expr

    NULLCONSTANT    shift, and go to state 51
    NEW             shift, and go to state 55
    THIS            shift, and go to state 57
    READINTEGER     shift, and go to state 60
    READLINE        shift, and go to state 61
    INSTANCEOF      shift, and go to state 62
    NOT_OP          shift, and go to state 63
    IDENTIFIER      shift, and go to state 64
    STRING_LITERAL  shift, and go to state 65
    INTCONSTANT     shift, and go to state 66
    DOUBLECONSTANT  shift, and go to state 67
    BOOLCONSTANT    shift, and go to state 68
    '-'             shift, and go to state 69
    '('             shift, and go to state 70

    LValue    go to state 90
    Call      go to state 91
    Expr      go to state 100
    Constant  go to state 84


State 70

   63 Expr: '(' . Expr ')'
   84     | '(' . CLASS IDENTIFIER ')' Expr

    NULLCONSTANT    shift, and go to state 51
    CLASS           shift, and go to state 101
    NEW             shift, and go to state 55
    THIS            shift, and go to state 57
    READINTEGER     shift, and go to state 60
    READLINE        shift, and go to state 61
    INSTANCEOF      shift, and go to state 62
    NOT_OP          shift, and go to state 63
    IDENTIFIER      shift, and go to state 64
    STRING_LITERAL  shift, and go to state 65
    INTCONSTANT     shift, and go to state 66
    DOUBLECONSTANT  shift, and go to state 67
    BOOLCONSTANT    shift, and go to state 68
    '-'             shift, and go to state 69
    '('             shift, and go to state 70

    LValue    go to state 90
    Call      go to state 91
    Expr      go to state 102
    Constant  go to state 84


State 71

   26 StmtBlock: '{' StmtList '}' .

    $default  reduce using rule 26 (StmtBlock)


State 72

   37 Stmt: StmtBlock .

    $default  reduce using rule 37 (Stmt)


State 73

   29 StmtList: StmtList Stmt .

    $default  reduce using rule 29 (StmtList)


State 74

   30 Stmt: SimpleStmt . ';'

    ';'  shift, and go to state 103


State 75

   38 SimpleStmt: LValue . '=' Expr
   60 Expr: LValue .

    '='  shift, and go to state 104

    $default  reduce using rule 60 (Expr)


State 76

   39 SimpleStmt: Call .
   62 Expr: Call .

    ')'       reduce using rule 39 (SimpleStmt)
    ';'       reduce using rule 39 (SimpleStmt)
    $default  reduce using rule 62 (Expr)


State 77

   33 Stmt: ForStmt .

    $default  reduce using rule 33 (Stmt)


State 78

   32 Stmt: WhileStmt .

    $default  reduce using rule 32 (Stmt)


State 79

   31 Stmt: IfStmt .

    $default  reduce using rule 31 (Stmt)


State 80

   35 Stmt: ReturnStmt . ';'

    ';'  shift, and go to state 105


State 81

   34 Stmt: BreakStmt . ';'

    ';'  shift, and go to state 106


State 82

   36 Stmt: PrintStmt . ';'

    ';'  shift, and go to state 107


State 83

   42 LValue: Expr . '.' IDENTIFIER
   43       | Expr . '[' Expr ']'
   45 Call: Expr . '.' IDENTIFIER '(' Actuals ')'
   64 Expr: Expr . '+' Expr
   65     | Expr . '-' Expr
   66     | Expr . '*' Expr
   67     | Expr . '/' Expr
   68     | Expr . '%' Expr
   70     | Expr . '<' Expr
   71     | Expr . LE_OP Expr
   72     | Expr . '>' Expr
   73     | Expr . GE_OP Expr
   74     | Expr . EQ_OP Expr
   75     | Expr . NE_OP Expr
   76     | Expr . AND_OP Expr
   77     | Expr . OR_OP Expr

    LE_OP   shift, and go to state 108
    GE_OP   shift, and go to state 109
    EQ_OP   shift, and go to state 110
    NE_OP   shift, and go to state 111
    AND_OP  shift, and go to state 112
    OR_OP   shift, and go to state 113
    '<'     shift, and go to state 114
    '>'     shift, and go to state 115
    '+'     shift, and go to state 116
    '-'     shift, and go to state 117
    '*'     shift, and go to state 118
    '/'     shift, and go to state 119
    '%'     shift, and go to state 120
    '['     shift, and go to state 121
    '.'     shift, and go to state 122


State 84

   59 Expr: Constant .

    $default  reduce using rule 59 (Expr)


State 85

   27 StmtBlock: '{' VariableList ';' StmtList . '}'
   29 StmtList: StmtList . Stmt

    NULLCONSTANT    shift, and go to state 51
    BREAK           shift, and go to state 52
    FOR             shift, and go to state 53
    IF              shift, and go to state 54
    NEW             shift, and go to state 55
    RETURN          shift, and go to state 56
    THIS            shift, and go to state 57
    WHILE           shift, and go to state 58
    PRINT           shift, and go to state 59
    READINTEGER     shift, and go to state 60
    READLINE        shift, and go to state 61
    INSTANCEOF      shift, and go to state 62
    NOT_OP          shift, and go to state 63
    IDENTIFIER      shift, and go to state 64
    STRING_LITERAL  shift, and go to state 65
    INTCONSTANT     shift, and go to state 66
    DOUBLECONSTANT  shift, and go to state 67
    BOOLCONSTANT    shift, and go to state 68
    '-'             shift, and go to state 69
    '('             shift, and go to state 70
    '{'             shift, and go to state 45
    '}'             shift, and go to state 123

    $default  reduce using rule 40 (SimpleStmt)

    StmtBlock   go to state 72
    Stmt        go to state 73
    SimpleStmt  go to state 74
    LValue      go to state 75
    Call        go to state 76
    ForStmt     go to state 77
    WhileStmt   go to state 78
    IfStmt      go to state 79
    ReturnStmt  go to state 80
    BreakStmt   go to state 81
    PrintStmt   go to state 82
    Expr        go to state 83
    Constant    go to state 84


State 86

   50 ForStmt: FOR '(' . SimpleStmt ';' BoolExpr ';' SimpleStmt ')' Stmt

    NULLCONSTANT    shift, and go to state 51
    NEW             shift, and go to state 55
    THIS            shift, and go to state 57
    READINTEGER     shift, and go to state 60
    READLINE        shift, and go to state 61
    INSTANCEOF      shift, and go to state 62
    NOT_OP          shift, and go to state 63
    IDENTIFIER      shift, and go to state 64
    STRING_LITERAL  shift, and go to state 65
    INTCONSTANT     shift, and go to state 66
    DOUBLECONSTANT  shift, and go to state 67
    BOOLCONSTANT    shift, and go to state 68
    '-'             shift, and go to state 69
    '('             shift, and go to state 70

    $default  reduce using rule 40 (SimpleStmt)

    SimpleStmt  go to state 124
    LValue      go to state 75
    Call        go to state 76
    Expr        go to state 83
    Constant    go to state 84


State 87

   52 IfStmt: IF '(' . BoolExpr ')' Stmt
   53       | IF '(' . BoolExpr ')' Stmt ELSE Stmt

    NULLCONSTANT    shift, and go to state 51
    NEW             shift, and go to state 55
    THIS            shift, and go to state 57
    READINTEGER     shift, and go to state 60
    READLINE        shift, and go to state 61
    INSTANCEOF      shift, and go to state 62
    NOT_OP          shift, and go to state 63
    IDENTIFIER      shift, and go to state 64
    STRING_LITERAL  shift, and go to state 65
    INTCONSTANT     shift, and go to state 66
    DOUBLECONSTANT  shift, and go to state 67
    BOOLCONSTANT    shift, and go to state 68
    '-'             shift, and go to state 69
    '('             shift, and go to state 70

    LValue    go to state 90
    Call      go to state 91
    BoolExpr  go to state 125
    Expr      go to state 126
    Constant  go to state 84


State 88

   81 Expr: NEW IDENTIFIER . '(' ')'

    '('  shift, and go to state 127


State 89

   14 Type: Type . '[' ']'
   82 Expr: NEW Type . '[' Expr ']'

    '['  shift, and go to state 128


State 90

   60 Expr: LValue .

    $default  reduce using rule 60 (Expr)


State 91

   62 Expr: Call .

    $default  reduce using rule 62 (Expr)


State 92

   42 LValue: Expr . '.' IDENTIFIER
   43       | Expr . '[' Expr ']'
   45 Call: Expr . '.' IDENTIFIER '(' Actuals ')'
   55 ReturnStmt: RETURN Expr .
   64 Expr: Expr . '+' Expr
   65     | Expr . '-' Expr
   66     | Expr . '*' Expr
   67     | Expr . '/' Expr
   68     | Expr . '%' Expr
   70     | Expr . '<' Expr
   71     | Expr . LE_OP Expr
   72     | Expr . '>' Expr
   73     | Expr . GE_OP Expr
   74     | Expr . EQ_OP Expr
   75     | Expr . NE_OP Expr
   76     | Expr . AND_OP Expr
   77     | Expr . OR_OP Expr

    LE_OP   shift, and go to state 108
    GE_OP   shift, and go to state 109
    EQ_OP   shift, and go to state 110
    NE_OP   shift, and go to state 111
    AND_OP  shift, and go to state 112
    OR_OP   shift, and go to state 113
    '<'     shift, and go to state 114
    '>'     shift, and go to state 115
    '+'     shift, and go to state 116
    '-'     shift, and go to state 117
    '*'     shift, and go to state 118
    '/'     shift, and go to state 119
    '%'     shift, and go to state 120
    '['     shift, and go to state 121
    '.'     shift, and go to state 122

    $default  reduce using rule 55 (ReturnStmt)


State 93

   51 WhileStmt: WHILE '(' . BoolExpr ')' Stmt

    NULLCONSTANT    shift, and go to state 51
    NEW             shift, and go to state 55
    THIS            shift, and go to state 57
    READINTEGER     shift, and go to state 60
    READLINE        shift, and go to state 61
    INSTANCEOF      shift, and go to state 62
    NOT_OP          shift, and go to state 63
    IDENTIFIER      shift, and go to state 64
    STRING_LITERAL  shift, and go to state 65
    INTCONSTANT     shift, and go to state 66
    DOUBLECONSTANT  shift, and go to state 67
    BOOLCONSTANT    shift, and go to state 68
    '-'             shift, and go to state 69
    '('             shift, and go to state 70

    LValue    go to state 90
    Call      go to state 91
    BoolExpr  go to state 129
    Expr      go to state 126
    Constant  go to state 84


State 94

   57 PrintStmt: PRINT '(' . ExprList ')'

    NULLCONSTANT    shift, and go to state 51
    NEW             shift, and go to state 55
    THIS            shift, and go to state 57
    READINTEGER     shift, and go to state 60
    READLINE        shift, and go to state 61
    INSTANCEOF      shift, and go to state 62
    NOT_OP          shift, and go to state 63
    IDENTIFIER      shift, and go to state 64
    STRING_LITERAL  shift, and go to state 65
    INTCONSTANT     shift, and go to state 66
    DOUBLECONSTANT  shift, and go to state 67
    BOOLCONSTANT    shift, and go to state 68
    '-'             shift, and go to state 69
    '('             shift, and go to state 70

    LValue    go to state 90
    Call      go to state 91
    ExprList  go to state 130
    Expr      go to state 131
    Constant  go to state 84


State 95

   79 Expr: READINTEGER '(' . ')'

    ')'  shift, and go to state 132


State 96

   80 Expr: READLINE '(' . ')'

    ')'  shift, and go to state 133


State 97

   83 Expr: INSTANCEOF '(' . Expr ',' IDENTIFIER ')'

    NULLCONSTANT    shift, and go to state 51
    NEW             shift, and go to state 55
    THIS            shift, and go to state 57
    READINTEGER     shift, and go to state 60
    READLINE        shift, and go to state 61
    INSTANCEOF      shift, and go to state 62
    NOT_OP          shift, and go to state 63
    IDENTIFIER      shift, and go to state 64
    STRING_LITERAL  shift, and go to state 65
    INTCONSTANT     shift, and go to state 66
    DOUBLECONSTANT  shift, and go to state 67
    BOOLCONSTANT    shift, and go to state 68
    '-'             shift, and go to state 69
    '('             shift, and go to state 70

    LValue    go to state 90
    Call      go to state 91
    Expr      go to state 134
    Constant  go to state 84


State 98

   42 LValue: Expr . '.' IDENTIFIER
   43       | Expr . '[' Expr ']'
   45 Call: Expr . '.' IDENTIFIER '(' Actuals ')'
   64 Expr: Expr . '+' Expr
   65     | Expr . '-' Expr
   66     | Expr . '*' Expr
   67     | Expr . '/' Expr
   68     | Expr . '%' Expr
   70     | Expr . '<' Expr
   71     | Expr . LE_OP Expr
   72     | Expr . '>' Expr
   73     | Expr . GE_OP Expr
   74     | Expr . EQ_OP Expr
   75     | Expr . NE_OP Expr
   76     | Expr . AND_OP Expr
   77     | Expr . OR_OP Expr
   78     | NOT_OP Expr .

    '['  shift, and go to state 121
    '.'  shift, and go to state 122

    $default  reduce using rule 78 (Expr)


State 99

   44 Call: IDENTIFIER '(' . Actuals ')'

    NULLCONSTANT    shift, and go to state 51
    NEW             shift, and go to state 55
    THIS            shift, and go to state 57
    READINTEGER     shift, and go to state 60
    READLINE        shift, and go to state 61
    INSTANCEOF      shift, and go to state 62
    NOT_OP          shift, and go to state 63
    IDENTIFIER      shift, and go to state 64
    STRING_LITERAL  shift, and go to state 65
    INTCONSTANT     shift, and go to state 66
    DOUBLECONSTANT  shift, and go to state 67
    BOOLCONSTANT    shift, and go to state 68
    '-'             shift, and go to state 69
    '('             shift, and go to state 70

    $default  reduce using rule 46 (Actuals)

    LValue    go to state 90
    Call      go to state 91
    Actuals   go to state 135
    ExprList  go to state 136
    Expr      go to state 131
    Constant  go to state 84


State 100

   42 LValue: Expr . '.' IDENTIFIER
   43       | Expr . '[' Expr ']'
   45 Call: Expr . '.' IDENTIFIER '(' Actuals ')'
   64 Expr: Expr . '+' Expr
   65     | Expr . '-' Expr
   66     | Expr . '*' Expr
   67     | Expr . '/' Expr
   68     | Expr . '%' Expr
   69     | '-' Expr .
   70     | Expr . '<' Expr
   71     | Expr . LE_OP Expr
   72     | Expr . '>' Expr
   73     | Expr . GE_OP Expr
   74     | Expr . EQ_OP Expr
   75     | Expr . NE_OP Expr
   76     | Expr . AND_OP Expr
   77     | Expr . OR_OP Expr

    '['  shift, and go to state 121
    '.'  shift, and go to state 122

    $default  reduce using rule 69 (Expr)


State 101

   84 Expr: '(' CLASS . IDENTIFIER ')' Expr

    IDENTIFIER  shift, and go to state 137


State 102

   42 LValue: Expr . '.' IDENTIFIER
   43       | Expr . '[' Expr ']'
   45 Call: Expr . '.' IDENTIFIER '(' Actuals ')'
   63 Expr: '(' Expr . ')'
   64     | Expr . '+' Expr
   65     | Expr . '-' Expr
   66     | Expr . '*' Expr
   67     | Expr . '/' Expr
   68     | Expr . '%' Expr
   70     | Expr . '<' Expr
   71     | Expr . LE_OP Expr
   72     | Expr . '>' Expr
   73     | Expr . GE_OP Expr
   74     | Expr . EQ_OP Expr
   75     | Expr . NE_OP Expr
   76     | Expr . AND_OP Expr
   77     | Expr . OR_OP Expr

    LE_OP   shift, and go to state 108
    GE_OP   shift, and go to state 109
    EQ_OP   shift, and go to state 110
    NE_OP   shift, and go to state 111
    AND_OP  shift, and go to state 112
    OR_OP   shift, and go to state 113
    '<'     shift, and go to state 114
    '>'     shift, and go to state 115
    '+'     shift, and go to state 116
    '-'     shift, and go to state 117
    '*'     shift, and go to state 118
    '/'     shift, and go to state 119
    '%'     shift, and go to state 120
    '['     shift, and go to state 121
    '.'     shift, and go to state 122
    ')'     shift, and go to state 138


State 103

   30 Stmt: SimpleStmt ';' .

    $default  reduce using rule 30 (Stmt)


State 104

   38 SimpleStmt: LValue '=' . Expr

    NULLCONSTANT    shift, and go to state 51
    NEW             shift, and go to state 55
    THIS            shift, and go to state 57
    READINTEGER     shift, and go to state 60
    READLINE        shift, and go to state 61
    INSTANCEOF      shift, and go to state 62
    NOT_OP          shift, and go to state 63
    IDENTIFIER      shift, and go to state 64
    STRING_LITERAL  shift, and go to state 65
    INTCONSTANT     shift, and go to state 66
    DOUBLECONSTANT  shift, and go to state 67
    BOOLCONSTANT    shift, and go to state 68
    '-'             shift, and go to state 69
    '('             shift, and go to state 70

    LValue    go to state 90
    Call      go to state 91
    Expr      go to state 139
    Constant  go to state 84


State 105

   35 Stmt: ReturnStmt ';' .

    $default  reduce using rule 35 (Stmt)


State 106

   34 Stmt: BreakStmt ';' .

    $default  reduce using rule 34 (Stmt)


State 107

   36 Stmt: PrintStmt ';' .

    $default  reduce using rule 36 (Stmt)


State 108

   71 Expr: Expr LE_OP . Expr

    NULLCONSTANT    shift, and go to state 51
    NEW             shift, and go to state 55
    THIS            shift, and go to state 57
    READINTEGER     shift, and go to state 60
    READLINE        shift, and go to state 61
    INSTANCEOF      shift, and go to state 62
    NOT_OP          shift, and go to state 63
    IDENTIFIER      shift, and go to state 64
    STRING_LITERAL  shift, and go to state 65
    INTCONSTANT     shift, and go to state 66
    DOUBLECONSTANT  shift, and go to state 67
    BOOLCONSTANT    shift, and go to state 68
    '-'             shift, and go to state 69
    '('             shift, and go to state 70

    LValue    go to state 90
    Call      go to state 91
    Expr      go to state 140
    Constant  go to state 84


State 109

   73 Expr: Expr GE_OP . Expr

    NULLCONSTANT    shift, and go to state 51
    NEW             shift, and go to state 55
    THIS            shift, and go to state 57
    READINTEGER     shift, and go to state 60
    READLINE        shift, and go to state 61
    INSTANCEOF      shift, and go to state 62
    NOT_OP          shift, and go to state 63
    IDENTIFIER      shift, and go to state 64
    STRING_LITERAL  shift, and go to state 65
    INTCONSTANT     shift, and go to state 66
    DOUBLECONSTANT  shift, and go to state 67
    BOOLCONSTANT    shift, and go to state 68
    '-'             shift, and go to state 69
    '('             shift, and go to state 70

    LValue    go to state 90
    Call      go to state 91
    Expr      go to state 141
    Constant  go to state 84


State 110

   74 Expr: Expr EQ_OP . Expr

    NULLCONSTANT    shift, and go to state 51
    NEW             shift, and go to state 55
    THIS            shift, and go to state 57
    READINTEGER     shift, and go to state 60
    READLINE        shift, and go to state 61
    INSTANCEOF      shift, and go to state 62
    NOT_OP          shift, and go to state 63
    IDENTIFIER      shift, and go to state 64
    STRING_LITERAL  shift, and go to state 65
    INTCONSTANT     shift, and go to state 66
    DOUBLECONSTANT  shift, and go to state 67
    BOOLCONSTANT    shift, and go to state 68
    '-'             shift, and go to state 69
    '('             shift, and go to state 70

    LValue    go to state 90
    Call      go to state 91
    Expr      go to state 142
    Constant  go to state 84


State 111

   75 Expr: Expr NE_OP . Expr

    NULLCONSTANT    shift, and go to state 51
    NEW             shift, and go to state 55
    THIS            shift, and go to state 57
    READINTEGER     shift, and go to state 60
    READLINE        shift, and go to state 61
    INSTANCEOF      shift, and go to state 62
    NOT_OP          shift, and go to state 63
    IDENTIFIER      shift, and go to state 64
    STRING_LITERAL  shift, and go to state 65
    INTCONSTANT     shift, and go to state 66
    DOUBLECONSTANT  shift, and go to state 67
    BOOLCONSTANT    shift, and go to state 68
    '-'             shift, and go to state 69
    '('             shift, and go to state 70

    LValue    go to state 90
    Call      go to state 91
    Expr      go to state 143
    Constant  go to state 84


State 112

   76 Expr: Expr AND_OP . Expr

    NULLCONSTANT    shift, and go to state 51
    NEW             shift, and go to state 55
    THIS            shift, and go to state 57
    READINTEGER     shift, and go to state 60
    READLINE        shift, and go to state 61
    INSTANCEOF      shift, and go to state 62
    NOT_OP          shift, and go to state 63
    IDENTIFIER      shift, and go to state 64
    STRING_LITERAL  shift, and go to state 65
    INTCONSTANT     shift, and go to state 66
    DOUBLECONSTANT  shift, and go to state 67
    BOOLCONSTANT    shift, and go to state 68
    '-'             shift, and go to state 69
    '('             shift, and go to state 70

    LValue    go to state 90
    Call      go to state 91
    Expr      go to state 144
    Constant  go to state 84


State 113

   77 Expr: Expr OR_OP . Expr

    NULLCONSTANT    shift, and go to state 51
    NEW             shift, and go to state 55
    THIS            shift, and go to state 57
    READINTEGER     shift, and go to state 60
    READLINE        shift, and go to state 61
    INSTANCEOF      shift, and go to state 62
    NOT_OP          shift, and go to state 63
    IDENTIFIER      shift, and go to state 64
    STRING_LITERAL  shift, and go to state 65
    INTCONSTANT     shift, and go to state 66
    DOUBLECONSTANT  shift, and go to state 67
    BOOLCONSTANT    shift, and go to state 68
    '-'             shift, and go to state 69
    '('             shift, and go to state 70

    LValue    go to state 90
    Call      go to state 91
    Expr      go to state 145
    Constant  go to state 84


State 114

   70 Expr: Expr '<' . Expr

    NULLCONSTANT    shift, and go to state 51
    NEW             shift, and go to state 55
    THIS            shift, and go to state 57
    READINTEGER     shift, and go to state 60
    READLINE        shift, and go to state 61
    INSTANCEOF      shift, and go to state 62
    NOT_OP          shift, and go to state 63
    IDENTIFIER      shift, and go to state 64
    STRING_LITERAL  shift, and go to state 65
    INTCONSTANT     shift, and go to state 66
    DOUBLECONSTANT  shift, and go to state 67
    BOOLCONSTANT    shift, and go to state 68
    '-'             shift, and go to state 69
    '('             shift, and go to state 70

    LValue    go to state 90
    Call      go to state 91
    Expr      go to state 146
    Constant  go to state 84


State 115

   72 Expr: Expr '>' . Expr

    NULLCONSTANT    shift, and go to state 51
    NEW             shift, and go to state 55
    THIS            shift, and go to state 57
    READINTEGER     shift, and go to state 60
    READLINE        shift, and go to state 61
    INSTANCEOF      shift, and go to state 62
    NOT_OP          shift, and go to state 63
    IDENTIFIER      shift, and go to state 64
    STRING_LITERAL  shift, and go to state 65
    INTCONSTANT     shift, and go to state 66
    DOUBLECONSTANT  shift, and go to state 67
    BOOLCONSTANT    shift, and go to state 68
    '-'             shift, and go to state 69
    '('             shift, and go to state 70

    LValue    go to state 90
    Call      go to state 91
    Expr      go to state 147
    Constant  go to state 84


State 116

   64 Expr: Expr '+' . Expr

    NULLCONSTANT    shift, and go to state 51
    NEW             shift, and go to state 55
    THIS            shift, and go to state 57
    READINTEGER     shift, and go to state 60
    READLINE        shift, and go to state 61
    INSTANCEOF      shift, and go to state 62
    NOT_OP          shift, and go to state 63
    IDENTIFIER      shift, and go to state 64
    STRING_LITERAL  shift, and go to state 65
    INTCONSTANT     shift, and go to state 66
    DOUBLECONSTANT  shift, and go to state 67
    BOOLCONSTANT    shift, and go to state 68
    '-'             shift, and go to state 69
    '('             shift, and go to state 70

    LValue    go to state 90
    Call      go to state 91
    Expr      go to state 148
    Constant  go to state 84


State 117

   65 Expr: Expr '-' . Expr

    NULLCONSTANT    shift, and go to state 51
    NEW             shift, and go to state 55
    THIS            shift, and go to state 57
    READINTEGER     shift, and go to state 60
    READLINE        shift, and go to state 61
    INSTANCEOF      shift, and go to state 62
    NOT_OP          shift, and go to state 63
    IDENTIFIER      shift, and go to state 64
    STRING_LITERAL  shift, and go to state 65
    INTCONSTANT     shift, and go to state 66
    DOUBLECONSTANT  shift, and go to state 67
    BOOLCONSTANT    shift, and go to state 68
    '-'             shift, and go to state 69
    '('             shift, and go to state 70

    LValue    go to state 90
    Call      go to state 91
    Expr      go to state 149
    Constant  go to state 84


State 118

   66 Expr: Expr '*' . Expr

    NULLCONSTANT    shift, and go to state 51
    NEW             shift, and go to state 55
    THIS            shift, and go to state 57
    READINTEGER     shift, and go to state 60
    READLINE        shift, and go to state 61
    INSTANCEOF      shift, and go to state 62
    NOT_OP          shift, and go to state 63
    IDENTIFIER      shift, and go to state 64
    STRING_LITERAL  shift, and go to state 65
    INTCONSTANT     shift, and go to state 66
    DOUBLECONSTANT  shift, and go to state 67
    BOOLCONSTANT    shift, and go to state 68
    '-'             shift, and go to state 69
    '('             shift, and go to state 70

    LValue    go to state 90
    Call      go to state 91
    Expr      go to state 150
    Constant  go to state 84


State 119

   67 Expr: Expr '/' . Expr

    NULLCONSTANT    shift, and go to state 51
    NEW             shift, and go to state 55
    THIS            shift, and go to state 57
    READINTEGER     shift, and go to state 60
    READLINE        shift, and go to state 61
    INSTANCEOF      shift, and go to state 62
    NOT_OP          shift, and go to state 63
    IDENTIFIER      shift, and go to state 64
    STRING_LITERAL  shift, and go to state 65
    INTCONSTANT     shift, and go to state 66
    DOUBLECONSTANT  shift, and go to state 67
    BOOLCONSTANT    shift, and go to state 68
    '-'             shift, and go to state 69
    '('             shift, and go to state 70

    LValue    go to state 90
    Call      go to state 91
    Expr      go to state 151
    Constant  go to state 84


State 120

   68 Expr: Expr '%' . Expr

    NULLCONSTANT    shift, and go to state 51
    NEW             shift, and go to state 55
    THIS            shift, and go to state 57
    READINTEGER     shift, and go to state 60
    READLINE        shift, and go to state 61
    INSTANCEOF      shift, and go to state 62
    NOT_OP          shift, and go to state 63
    IDENTIFIER      shift, and go to state 64
    STRING_LITERAL  shift, and go to state 65
    INTCONSTANT     shift, and go to state 66
    DOUBLECONSTANT  shift, and go to state 67
    BOOLCONSTANT    shift, and go to state 68
    '-'             shift, and go to state 69
    '('             shift, and go to state 70

    LValue    go to state 90
    Call      go to state 91
    Expr      go to state 152
    Constant  go to state 84


State 121

   43 LValue: Expr '[' . Expr ']'

    NULLCONSTANT    shift, and go to state 51
    NEW             shift, and go to state 55
    THIS            shift, and go to state 57
    READINTEGER     shift, and go to state 60
    READLINE        shift, and go to state 61
    INSTANCEOF      shift, and go to state 62
    NOT_OP          shift, and go to state 63
    IDENTIFIER      shift, and go to state 64
    STRING_LITERAL  shift, and go to state 65
    INTCONSTANT     shift, and go to state 66
    DOUBLECONSTANT  shift, and go to state 67
    BOOLCONSTANT    shift, and go to state 68
    '-'             shift, and go to state 69
    '('             shift, and go to state 70

    LValue    go to state 90
    Call      go to state 91
    Expr      go to state 153
    Constant  go to state 84


State 122

   42 LValue: Expr '.' . IDENTIFIER
   45 Call: Expr '.' . IDENTIFIER '(' Actuals ')'

    IDENTIFIER  shift, and go to state 154


State 123

   27 StmtBlock: '{' VariableList ';' StmtList '}' .

    $default  reduce using rule 27 (StmtBlock)


State 124

   50 ForStmt: FOR '(' SimpleStmt . ';' BoolExpr ';' SimpleStmt ')' Stmt

    ';'  shift, and go to state 155


State 125

   52 IfStmt: IF '(' BoolExpr . ')' Stmt
   53       | IF '(' BoolExpr . ')' Stmt ELSE Stmt

    ')'  shift, and go to state 156


State 126

   42 LValue: Expr . '.' IDENTIFIER
   43       | Expr . '[' Expr ']'
   45 Call: Expr . '.' IDENTIFIER '(' Actuals ')'
   58 BoolExpr: Expr .
   64 Expr: Expr . '+' Expr
   65     | Expr . '-' Expr
   66     | Expr . '*' Expr
   67     | Expr . '/' Expr
   68     | Expr . '%' Expr
   70     | Expr . '<' Expr
   71     | Expr . LE_OP Expr
   72     | Expr . '>' Expr
   73     | Expr . GE_OP Expr
   74     | Expr . EQ_OP Expr
   75     | Expr . NE_OP Expr
   76     | Expr . AND_OP Expr
   77     | Expr . OR_OP Expr

    LE_OP   shift, and go to state 108
    GE_OP   shift, and go to state 109
    EQ_OP   shift, and go to state 110
    NE_OP   shift, and go to state 111
    AND_OP  shift, and go to state 112
    OR_OP   shift, and go to state 113
    '<'     shift, and go to state 114
    '>'     shift, and go to state 115
    '+'     shift, and go to state 116
    '-'     shift, and go to state 117
    '*'     shift, and go to state 118
    '/'     shift, and go to state 119
    '%'     shift, and go to state 120
    '['     shift, and go to state 121
    '.'     shift, and go to state 122

    $default  reduce using rule 58 (BoolExpr)


State 127

   81 Expr: NEW IDENTIFIER '(' . ')'

    ')'  shift, and go to state 157


State 128

   14 Type: Type '[' . ']'
   82 Expr: NEW Type '[' . Expr ']'

    NULLCONSTANT    shift, and go to state 51
    NEW             shift, and go to state 55
    THIS            shift, and go to state 57
    READINTEGER     shift, and go to state 60
    READLINE        shift, and go to state 61
    INSTANCEOF      shift, and go to state 62
    NOT_OP          shift, and go to state 63
    IDENTIFIER      shift, and go to state 64
    STRING_LITERAL  shift, and go to state 65
    INTCONSTANT     shift, and go to state 66
    DOUBLECONSTANT  shift, and go to state 67
    BOOLCONSTANT    shift, and go to state 68
    '-'             shift, and go to state 69
    ']'             shift, and go to state 33
    '('             shift, and go to state 70

    LValue    go to state 90
    Call      go to state 91
    Expr      go to state 158
    Constant  go to state 84


State 129

   51 WhileStmt: WHILE '(' BoolExpr . ')' Stmt

    ')'  shift, and go to state 159


State 130

   49 ExprList: ExprList . ',' Expr
   57 PrintStmt: PRINT '(' ExprList . ')'

    ')'  shift, and go to state 160
    ','  shift, and go to state 161


State 131

   42 LValue: Expr . '.' IDENTIFIER
   43       | Expr . '[' Expr ']'
   45 Call: Expr . '.' IDENTIFIER '(' Actuals ')'
   48 ExprList: Expr .
   64 Expr: Expr . '+' Expr
   65     | Expr . '-' Expr
   66     | Expr . '*' Expr
   67     | Expr . '/' Expr
   68     | Expr . '%' Expr
   70     | Expr . '<' Expr
   71     | Expr . LE_OP Expr
   72     | Expr . '>' Expr
   73     | Expr . GE_OP Expr
   74     | Expr . EQ_OP Expr
   75     | Expr . NE_OP Expr
   76     | Expr . AND_OP Expr
   77     | Expr . OR_OP Expr

    LE_OP   shift, and go to state 108
    GE_OP   shift, and go to state 109
    EQ_OP   shift, and go to state 110
    NE_OP   shift, and go to state 111
    AND_OP  shift, and go to state 112
    OR_OP   shift, and go to state 113
    '<'     shift, and go to state 114
    '>'     shift, and go to state 115
    '+'     shift, and go to state 116
    '-'     shift, and go to state 117
    '*'     shift, and go to state 118
    '/'     shift, and go to state 119
    '%'     shift, and go to state 120
    '['     shift, and go to state 121
    '.'     shift, and go to state 122

    $default  reduce using rule 48 (ExprList)


State 132

   79 Expr: READINTEGER '(' ')' .

    $default  reduce using rule 79 (Expr)


State 133

   80 Expr: READLINE '(' ')' .

    $default  reduce using rule 80 (Expr)


State 134

   42 LValue: Expr . '.' IDENTIFIER
   43       | Expr . '[' Expr ']'
   45 Call: Expr . '.' IDENTIFIER '(' Actuals ')'
   64 Expr: Expr . '+' Expr
   65     | Expr . '-' Expr
   66     | Expr . '*' Expr
   67     | Expr . '/' Expr
   68     | Expr . '%' Expr
   70     | Expr . '<' Expr
   71     | Expr . LE_OP Expr
   72     | Expr . '>' Expr
   73     | Expr . GE_OP Expr
   74     | Expr . EQ_OP Expr
   75     | Expr . NE_OP Expr
   76     | Expr . AND_OP Expr
   77     | Expr . OR_OP Expr
   83     | INSTANCEOF '(' Expr . ',' IDENTIFIER ')'

    LE_OP   shift, and go to state 108
    GE_OP   shift, and go to state 109
    EQ_OP   shift, and go to state 110
    NE_OP   shift, and go to state 111
    AND_OP  shift, and go to state 112
    OR_OP   shift, and go to state 113
    '<'     shift, and go to state 114
    '>'     shift, and go to state 115
    '+'     shift, and go to state 116
    '-'     shift, and go to state 117
    '*'     shift, and go to state 118
    '/'     shift, and go to state 119
    '%'     shift, and go to state 120
    '['     shift, and go to state 121
    '.'     shift, and go to state 122
    ','     shift, and go to state 162


State 135

   44 Call: IDENTIFIER '(' Actuals . ')'

    ')'  shift, and go to state 163


State 136

   47 Actuals: ExprList .
   49 ExprList: ExprList . ',' Expr

    ','  shift, and go to state 161

    $default  reduce using rule 47 (Actuals)


State 137

   84 Expr: '(' CLASS IDENTIFIER . ')' Expr

    ')'  shift, and go to state 164


State 138

   63 Expr: '(' Expr ')' .

    $default  reduce using rule 63 (Expr)


State 139

   38 SimpleStmt: LValue '=' Expr .
   42 LValue: Expr . '.' IDENTIFIER
   43       | Expr . '[' Expr ']'
   45 Call: Expr . '.' IDENTIFIER '(' Actuals ')'
   64 Expr: Expr . '+' Expr
   65     | Expr . '-' Expr
   66     | Expr . '*' Expr
   67     | Expr . '/' Expr
   68     | Expr . '%' Expr
   70     | Expr . '<' Expr
   71     | Expr . LE_OP Expr
   72     | Expr . '>' Expr
   73     | Expr . GE_OP Expr
   74     | Expr . EQ_OP Expr
   75     | Expr . NE_OP Expr
   76     | Expr . AND_OP Expr
   77     | Expr . OR_OP Expr

    LE_OP   shift, and go to state 108
    GE_OP   shift, and go to state 109
    EQ_OP   shift, and go to state 110
    NE_OP   shift, and go to state 111
    AND_OP  shift, and go to state 112
    OR_OP   shift, and go to state 113
    '<'     shift, and go to state 114
    '>'     shift, and go to state 115
    '+'     shift, and go to state 116
    '-'     shift, and go to state 117
    '*'     shift, and go to state 118
    '/'     shift, and go to state 119
    '%'     shift, and go to state 120
    '['     shift, and go to state 121
    '.'     shift, and go to state 122

    $default  reduce using rule 38 (SimpleStmt)


State 140

   42 LValue: Expr . '.' IDENTIFIER
   43       | Expr . '[' Expr ']'
   45 Call: Expr . '.' IDENTIFIER '(' Actuals ')'
   64 Expr: Expr . '+' Expr
   65     | Expr . '-' Expr
   66     | Expr . '*' Expr
   67     | Expr . '/' Expr
   68     | Expr . '%' Expr
   70     | Expr . '<' Expr
   71     | Expr . LE_OP Expr
   71     | Expr LE_OP Expr .
   72     | Expr . '>' Expr
   73     | Expr . GE_OP Expr
   74     | Expr . EQ_OP Expr
   75     | Expr . NE_OP Expr
   76     | Expr . AND_OP Expr
   77     | Expr . OR_OP Expr

    '+'  shift, and go to state 116
    '-'  shift, and go to state 117
    '*'  shift, and go to state 118
    '/'  shift, and go to state 119
    '%'  shift, and go to state 120
    '['  shift, and go to state 121
    '.'  shift, and go to state 122

    LE_OP  error (nonassociative)
    GE_OP  error (nonassociative)
    '<'    error (nonassociative)
    '>'    error (nonassociative)

    $default  reduce using rule 71 (Expr)


State 141

   42 LValue: Expr . '.' IDENTIFIER
   43       | Expr . '[' Expr ']'
   45 Call: Expr . '.' IDENTIFIER '(' Actuals ')'
   64 Expr: Expr . '+' Expr
   65     | Expr . '-' Expr
   66     | Expr . '*' Expr
   67     | Expr . '/' Expr
   68     | Expr . '%' Expr
   70     | Expr . '<' Expr
   71     | Expr . LE_OP Expr
   72     | Expr . '>' Expr
   73     | Expr . GE_OP Expr
   73     | Expr GE_OP Expr .
   74     | Expr . EQ_OP Expr
   75     | Expr . NE_OP Expr
   76     | Expr . AND_OP Expr
   77     | Expr . OR_OP Expr

    '+'  shift, and go to state 116
    '-'  shift, and go to state 117
    '*'  shift, and go to state 118
    '/'  shift, and go to state 119
    '%'  shift, and go to state 120
    '['  shift, and go to state 121
    '.'  shift, and go to state 122

    LE_OP  error (nonassociative)
    GE_OP  error (nonassociative)
    '<'    error (nonassociative)
    '>'    error (nonassociative)

    $default  reduce using rule 73 (Expr)


State 142

   42 LValue: Expr . '.' IDENTIFIER
   43       | Expr . '[' Expr ']'
   45 Call: Expr . '.' IDENTIFIER '(' Actuals ')'
   64 Expr: Expr . '+' Expr
   65     | Expr . '-' Expr
   66     | Expr . '*' Expr
   67     | Expr . '/' Expr
   68     | Expr . '%' Expr
   70     | Expr . '<' Expr
   71     | Expr . LE_OP Expr
   72     | Expr . '>' Expr
   73     | Expr . GE_OP Expr
   74     | Expr . EQ_OP Expr
   74     | Expr EQ_OP Expr .
   75     | Expr . NE_OP Expr
   76     | Expr . AND_OP Expr
   77     | Expr . OR_OP Expr

    LE_OP  shift, and go to state 108
    GE_OP  shift, and go to state 109
    '<'    shift, and go to state 114
    '>'    shift, and go to state 115
    '+'    shift, and go to state 116
    '-'    shift, and go to state 117
    '*'    shift, and go to state 118
    '/'    shift, and go to state 119
    '%'    shift, and go to state 120
    '['    shift, and go to state 121
    '.'    shift, and go to state 122

    EQ_OP  error (nonassociative)
    NE_OP  error (nonassociative)

    $default  reduce using rule 74 (Expr)


State 143

   42 LValue: Expr . '.' IDENTIFIER
   43       | Expr . '[' Expr ']'
   45 Call: Expr . '.' IDENTIFIER '(' Actuals ')'
   64 Expr: Expr . '+' Expr
   65     | Expr . '-' Expr
   66     | Expr . '*' Expr
   67     | Expr . '/' Expr
   68     | Expr . '%' Expr
   70     | Expr . '<' Expr
   71     | Expr . LE_OP Expr
   72     | Expr . '>' Expr
   73     | Expr . GE_OP Expr
   74     | Expr . EQ_OP Expr
   75     | Expr . NE_OP Expr
   75     | Expr NE_OP Expr .
   76     | Expr . AND_OP Expr
   77     | Expr . OR_OP Expr

    LE_OP  shift, and go to state 108
    GE_OP  shift, and go to state 109
    '<'    shift, and go to state 114
    '>'    shift, and go to state 115
    '+'    shift, and go to state 116
    '-'    shift, and go to state 117
    '*'    shift, and go to state 118
    '/'    shift, and go to state 119
    '%'    shift, and go to state 120
    '['    shift, and go to state 121
    '.'    shift, and go to state 122

    EQ_OP  error (nonassociative)
    NE_OP  error (nonassociative)

    $default  reduce using rule 75 (Expr)


State 144

   42 LValue: Expr . '.' IDENTIFIER
   43       | Expr . '[' Expr ']'
   45 Call: Expr . '.' IDENTIFIER '(' Actuals ')'
   64 Expr: Expr . '+' Expr
   65     | Expr . '-' Expr
   66     | Expr . '*' Expr
   67     | Expr . '/' Expr
   68     | Expr . '%' Expr
   70     | Expr . '<' Expr
   71     | Expr . LE_OP Expr
   72     | Expr . '>' Expr
   73     | Expr . GE_OP Expr
   74     | Expr . EQ_OP Expr
   75     | Expr . NE_OP Expr
   76     | Expr . AND_OP Expr
   76     | Expr AND_OP Expr .
   77     | Expr . OR_OP Expr

    LE_OP  shift, and go to state 108
    GE_OP  shift, and go to state 109
    EQ_OP  shift, and go to state 110
    NE_OP  shift, and go to state 111
    '<'    shift, and go to state 114
    '>'    shift, and go to state 115
    '+'    shift, and go to state 116
    '-'    shift, and go to state 117
    '*'    shift, and go to state 118
    '/'    shift, and go to state 119
    '%'    shift, and go to state 120
    '['    shift, and go to state 121
    '.'    shift, and go to state 122

    $default  reduce using rule 76 (Expr)


State 145

   42 LValue: Expr . '.' IDENTIFIER
   43       | Expr . '[' Expr ']'
   45 Call: Expr . '.' IDENTIFIER '(' Actuals ')'
   64 Expr: Expr . '+' Expr
   65     | Expr . '-' Expr
   66     | Expr . '*' Expr
   67     | Expr . '/' Expr
   68     | Expr . '%' Expr
   70     | Expr . '<' Expr
   71     | Expr . LE_OP Expr
   72     | Expr . '>' Expr
   73     | Expr . GE_OP Expr
   74     | Expr . EQ_OP Expr
   75     | Expr . NE_OP Expr
   76     | Expr . AND_OP Expr
   77     | Expr . OR_OP Expr
   77     | Expr OR_OP Expr .

    LE_OP   shift, and go to state 108
    GE_OP   shift, and go to state 109
    EQ_OP   shift, and go to state 110
    NE_OP   shift, and go to state 111
    AND_OP  shift, and go to state 112
    '<'     shift, and go to state 114
    '>'     shift, and go to state 115
    '+'     shift, and go to state 116
    '-'     shift, and go to state 117
    '*'     shift, and go to state 118
    '/'     shift, and go to state 119
    '%'     shift, and go to state 120
    '['     shift, and go to state 121
    '.'     shift, and go to state 122

    $default  reduce using rule 77 (Expr)


State 146

   42 LValue: Expr . '.' IDENTIFIER
   43       | Expr . '[' Expr ']'
   45 Call: Expr . '.' IDENTIFIER '(' Actuals ')'
   64 Expr: Expr . '+' Expr
   65     | Expr . '-' Expr
   66     | Expr . '*' Expr
   67     | Expr . '/' Expr
   68     | Expr . '%' Expr
   70     | Expr . '<' Expr
   70     | Expr '<' Expr .
   71     | Expr . LE_OP Expr
   72     | Expr . '>' Expr
   73     | Expr . GE_OP Expr
   74     | Expr . EQ_OP Expr
   75     | Expr . NE_OP Expr
   76     | Expr . AND_OP Expr
   77     | Expr . OR_OP Expr

    '+'  shift, and go to state 116
    '-'  shift, and go to state 117
    '*'  shift, and go to state 118
    '/'  shift, and go to state 119
    '%'  shift, and go to state 120
    '['  shift, and go to state 121
    '.'  shift, and go to state 122

    LE_OP  error (nonassociative)
    GE_OP  error (nonassociative)
    '<'    error (nonassociative)
    '>'    error (nonassociative)

    $default  reduce using rule 70 (Expr)


State 147

   42 LValue: Expr . '.' IDENTIFIER
   43       | Expr . '[' Expr ']'
   45 Call: Expr . '.' IDENTIFIER '(' Actuals ')'
   64 Expr: Expr . '+' Expr
   65     | Expr . '-' Expr
   66     | Expr . '*' Expr
   67     | Expr . '/' Expr
   68     | Expr . '%' Expr
   70     | Expr . '<' Expr
   71     | Expr . LE_OP Expr
   72     | Expr . '>' Expr
   72     | Expr '>' Expr .
   73     | Expr . GE_OP Expr
   74     | Expr . EQ_OP Expr
   75     | Expr . NE_OP Expr
   76     | Expr . AND_OP Expr
   77     | Expr . OR_OP Expr

    '+'  shift, and go to state 116
    '-'  shift, and go to state 117
    '*'  shift, and go to state 118
    '/'  shift, and go to state 119
    '%'  shift, and go to state 120
    '['  shift, and go to state 121
    '.'  shift, and go to state 122

    LE_OP  error (nonassociative)
    GE_OP  error (nonassociative)
    '<'    error (nonassociative)
    '>'    error (nonassociative)

    $default  reduce using rule 72 (Expr)


State 148

   42 LValue: Expr . '.' IDENTIFIER
   43       | Expr . '[' Expr ']'
   45 Call: Expr . '.' IDENTIFIER '(' Actuals ')'
   64 Expr: Expr . '+' Expr
   64     | Expr '+' Expr .
   65     | Expr . '-' Expr
   66     | Expr . '*' Expr
   67     | Expr . '/' Expr
   68     | Expr . '%' Expr
   70     | Expr . '<' Expr
   71     | Expr . LE_OP Expr
   72     | Expr . '>' Expr
   73     | Expr . GE_OP Expr
   74     | Expr . EQ_OP Expr
   75     | Expr . NE_OP Expr
   76     | Expr . AND_OP Expr
   77     | Expr . OR_OP Expr

    '*'  shift, and go to state 118
    '/'  shift, and go to state 119
    '%'  shift, and go to state 120
    '['  shift, and go to state 121
    '.'  shift, and go to state 122

    $default  reduce using rule 64 (Expr)


State 149

   42 LValue: Expr . '.' IDENTIFIER
   43       | Expr . '[' Expr ']'
   45 Call: Expr . '.' IDENTIFIER '(' Actuals ')'
   64 Expr: Expr . '+' Expr
   65     | Expr . '-' Expr
   65     | Expr '-' Expr .
   66     | Expr . '*' Expr
   67     | Expr . '/' Expr
   68     | Expr . '%' Expr
   70     | Expr . '<' Expr
   71     | Expr . LE_OP Expr
   72     | Expr . '>' Expr
   73     | Expr . GE_OP Expr
   74     | Expr . EQ_OP Expr
   75     | Expr . NE_OP Expr
   76     | Expr . AND_OP Expr
   77     | Expr . OR_OP Expr

    '*'  shift, and go to state 118
    '/'  shift, and go to state 119
    '%'  shift, and go to state 120
    '['  shift, and go to state 121
    '.'  shift, and go to state 122

    $default  reduce using rule 65 (Expr)


State 150

   42 LValue: Expr . '.' IDENTIFIER
   43       | Expr . '[' Expr ']'
   45 Call: Expr . '.' IDENTIFIER '(' Actuals ')'
   64 Expr: Expr . '+' Expr
   65     | Expr . '-' Expr
   66     | Expr . '*' Expr
   66     | Expr '*' Expr .
   67     | Expr . '/' Expr
   68     | Expr . '%' Expr
   70     | Expr . '<' Expr
   71     | Expr . LE_OP Expr
   72     | Expr . '>' Expr
   73     | Expr . GE_OP Expr
   74     | Expr . EQ_OP Expr
   75     | Expr . NE_OP Expr
   76     | Expr . AND_OP Expr
   77     | Expr . OR_OP Expr

    '['  shift, and go to state 121
    '.'  shift, and go to state 122

    $default  reduce using rule 66 (Expr)


State 151

   42 LValue: Expr . '.' IDENTIFIER
   43       | Expr . '[' Expr ']'
   45 Call: Expr . '.' IDENTIFIER '(' Actuals ')'
   64 Expr: Expr . '+' Expr
   65     | Expr . '-' Expr
   66     | Expr . '*' Expr
   67     | Expr . '/' Expr
   67     | Expr '/' Expr .
   68     | Expr . '%' Expr
   70     | Expr . '<' Expr
   71     | Expr . LE_OP Expr
   72     | Expr . '>' Expr
   73     | Expr . GE_OP Expr
   74     | Expr . EQ_OP Expr
   75     | Expr . NE_OP Expr
   76     | Expr . AND_OP Expr
   77     | Expr . OR_OP Expr

    '['  shift, and go to state 121
    '.'  shift, and go to state 122

    $default  reduce using rule 67 (Expr)


State 152

   42 LValue: Expr . '.' IDENTIFIER
   43       | Expr . '[' Expr ']'
   45 Call: Expr . '.' IDENTIFIER '(' Actuals ')'
   64 Expr: Expr . '+' Expr
   65     | Expr . '-' Expr
   66     | Expr . '*' Expr
   67     | Expr . '/' Expr
   68     | Expr . '%' Expr
   68     | Expr '%' Expr .
   70     | Expr . '<' Expr
   71     | Expr . LE_OP Expr
   72     | Expr . '>' Expr
   73     | Expr . GE_OP Expr
   74     | Expr . EQ_OP Expr
   75     | Expr . NE_OP Expr
   76     | Expr . AND_OP Expr
   77     | Expr . OR_OP Expr

    '['  shift, and go to state 121
    '.'  shift, and go to state 122

    $default  reduce using rule 68 (Expr)


State 153

   42 LValue: Expr . '.' IDENTIFIER
   43       | Expr . '[' Expr ']'
   43       | Expr '[' Expr . ']'
   45 Call: Expr . '.' IDENTIFIER '(' Actuals ')'
   64 Expr: Expr . '+' Expr
   65     | Expr . '-' Expr
   66     | Expr . '*' Expr
   67     | Expr . '/' Expr
   68     | Expr . '%' Expr
   70     | Expr . '<' Expr
   71     | Expr . LE_OP Expr
   72     | Expr . '>' Expr
   73     | Expr . GE_OP Expr
   74     | Expr . EQ_OP Expr
   75     | Expr . NE_OP Expr
   76     | Expr . AND_OP Expr
   77     | Expr . OR_OP Expr

    LE_OP   shift, and go to state 108
    GE_OP   shift, and go to state 109
    EQ_OP   shift, and go to state 110
    NE_OP   shift, and go to state 111
    AND_OP  shift, and go to state 112
    OR_OP   shift, and go to state 113
    '<'     shift, and go to state 114
    '>'     shift, and go to state 115
    '+'     shift, and go to state 116
    '-'     shift, and go to state 117
    '*'     shift, and go to state 118
    '/'     shift, and go to state 119
    '%'     shift, and go to state 120
    '['     shift, and go to state 121
    '.'     shift, and go to state 122
    ']'     shift, and go to state 165


State 154

   42 LValue: Expr '.' IDENTIFIER .
   45 Call: Expr '.' IDENTIFIER . '(' Actuals ')'

    '('  shift, and go to state 166

    $default  reduce using rule 42 (LValue)


State 155

   50 ForStmt: FOR '(' SimpleStmt ';' . BoolExpr ';' SimpleStmt ')' Stmt

    NULLCONSTANT    shift, and go to state 51
    NEW             shift, and go to state 55
    THIS            shift, and go to state 57
    READINTEGER     shift, and go to state 60
    READLINE        shift, and go to state 61
    INSTANCEOF      shift, and go to state 62
    NOT_OP          shift, and go to state 63
    IDENTIFIER      shift, and go to state 64
    STRING_LITERAL  shift, and go to state 65
    INTCONSTANT     shift, and go to state 66
    DOUBLECONSTANT  shift, and go to state 67
    BOOLCONSTANT    shift, and go to state 68
    '-'             shift, and go to state 69
    '('             shift, and go to state 70

    LValue    go to state 90
    Call      go to state 91
    BoolExpr  go to state 167
    Expr      go to state 126
    Constant  go to state 84


State 156

   52 IfStmt: IF '(' BoolExpr ')' . Stmt
   53       | IF '(' BoolExpr ')' . Stmt ELSE Stmt

    NULLCONSTANT    shift, and go to state 51
    BREAK           shift, and go to state 52
    FOR             shift, and go to state 53
    IF              shift, and go to state 54
    NEW             shift, and go to state 55
    RETURN          shift, and go to state 56
    THIS            shift, and go to state 57
    WHILE           shift, and go to state 58
    PRINT           shift, and go to state 59
    READINTEGER     shift, and go to state 60
    READLINE        shift, and go to state 61
    INSTANCEOF      shift, and go to state 62
    NOT_OP          shift, and go to state 63
    IDENTIFIER      shift, and go to state 64
    STRING_LITERAL  shift, and go to state 65
    INTCONSTANT     shift, and go to state 66
    DOUBLECONSTANT  shift, and go to state 67
    BOOLCONSTANT    shift, and go to state 68
    '-'             shift, and go to state 69
    '('             shift, and go to state 70
    '{'             shift, and go to state 45

    $default  reduce using rule 40 (SimpleStmt)

    StmtBlock   go to state 72
    Stmt        go to state 168
    SimpleStmt  go to state 74
    LValue      go to state 75
    Call        go to state 76
    ForStmt     go to state 77
    WhileStmt   go to state 78
    IfStmt      go to state 79
    ReturnStmt  go to state 80
    BreakStmt   go to state 81
    PrintStmt   go to state 82
    Expr        go to state 83
    Constant    go to state 84


State 157

   81 Expr: NEW IDENTIFIER '(' ')' .

    $default  reduce using rule 81 (Expr)


State 158

   42 LValue: Expr . '.' IDENTIFIER
   43       | Expr . '[' Expr ']'
   45 Call: Expr . '.' IDENTIFIER '(' Actuals ')'
   64 Expr: Expr . '+' Expr
   65     | Expr . '-' Expr
   66     | Expr . '*' Expr
   67     | Expr . '/' Expr
   68     | Expr . '%' Expr
   70     | Expr . '<' Expr
   71     | Expr . LE_OP Expr
   72     | Expr . '>' Expr
   73     | Expr . GE_OP Expr
   74     | Expr . EQ_OP Expr
   75     | Expr . NE_OP Expr
   76     | Expr . AND_OP Expr
   77     | Expr . OR_OP Expr
   82     | NEW Type '[' Expr . ']'

    LE_OP   shift, and go to state 108
    GE_OP   shift, and go to state 109
    EQ_OP   shift, and go to state 110
    NE_OP   shift, and go to state 111
    AND_OP  shift, and go to state 112
    OR_OP   shift, and go to state 113
    '<'     shift, and go to state 114
    '>'     shift, and go to state 115
    '+'     shift, and go to state 116
    '-'     shift, and go to state 117
    '*'     shift, and go to state 118
    '/'     shift, and go to state 119
    '%'     shift, and go to state 120
    '['     shift, and go to state 121
    '.'     shift, and go to state 122
    ']'     shift, and go to state 169


State 159

   51 WhileStmt: WHILE '(' BoolExpr ')' . Stmt

    NULLCONSTANT    shift, and go to state 51
    BREAK           shift, and go to state 52
    FOR             shift, and go to state 53
    IF              shift, and go to state 54
    NEW             shift, and go to state 55
    RETURN          shift, and go to state 56
    THIS            shift, and go to state 57
    WHILE           shift, and go to state 58
    PRINT           shift, and go to state 59
    READINTEGER     shift, and go to state 60
    READLINE        shift, and go to state 61
    INSTANCEOF      shift, and go to state 62
    NOT_OP          shift, and go to state 63
    IDENTIFIER      shift, and go to state 64
    STRING_LITERAL  shift, and go to state 65
    INTCONSTANT     shift, and go to state 66
    DOUBLECONSTANT  shift, and go to state 67
    BOOLCONSTANT    shift, and go to state 68
    '-'             shift, and go to state 69
    '('             shift, and go to state 70
    '{'             shift, and go to state 45

    $default  reduce using rule 40 (SimpleStmt)

    StmtBlock   go to state 72
    Stmt        go to state 170
    SimpleStmt  go to state 74
    LValue      go to state 75
    Call        go to state 76
    ForStmt     go to state 77
    WhileStmt   go to state 78
    IfStmt      go to state 79
    ReturnStmt  go to state 80
    BreakStmt   go to state 81
    PrintStmt   go to state 82
    Expr        go to state 83
    Constant    go to state 84


State 160

   57 PrintStmt: PRINT '(' ExprList ')' .

    $default  reduce using rule 57 (PrintStmt)


State 161

   49 ExprList: ExprList ',' . Expr

    NULLCONSTANT    shift, and go to state 51
    NEW             shift, and go to state 55
    THIS            shift, and go to state 57
    READINTEGER     shift, and go to state 60
    READLINE        shift, and go to state 61
    INSTANCEOF      shift, and go to state 62
    NOT_OP          shift, and go to state 63
    IDENTIFIER      shift, and go to state 64
    STRING_LITERAL  shift, and go to state 65
    INTCONSTANT     shift, and go to state 66
    DOUBLECONSTANT  shift, and go to state 67
    BOOLCONSTANT    shift, and go to state 68
    '-'             shift, and go to state 69
    '('             shift, and go to state 70

    LValue    go to state 90
    Call      go to state 91
    Expr      go to state 171
    Constant  go to state 84


State 162

   83 Expr: INSTANCEOF '(' Expr ',' . IDENTIFIER ')'

    IDENTIFIER  shift, and go to state 172


State 163

   44 Call: IDENTIFIER '(' Actuals ')' .

    $default  reduce using rule 44 (Call)


State 164

   84 Expr: '(' CLASS IDENTIFIER ')' . Expr

    NULLCONSTANT    shift, and go to state 51
    NEW             shift, and go to state 55
    THIS            shift, and go to state 57
    READINTEGER     shift, and go to state 60
    READLINE        shift, and go to state 61
    INSTANCEOF      shift, and go to state 62
    NOT_OP          shift, and go to state 63
    IDENTIFIER      shift, and go to state 64
    STRING_LITERAL  shift, and go to state 65
    INTCONSTANT     shift, and go to state 66
    DOUBLECONSTANT  shift, and go to state 67
    BOOLCONSTANT    shift, and go to state 68
    '-'             shift, and go to state 69
    '('             shift, and go to state 70

    LValue    go to state 90
    Call      go to state 91
    Expr      go to state 173
    Constant  go to state 84


State 165

   43 LValue: Expr '[' Expr ']' .

    $default  reduce using rule 43 (LValue)


State 166

   45 Call: Expr '.' IDENTIFIER '(' . Actuals ')'

    NULLCONSTANT    shift, and go to state 51
    NEW             shift, and go to state 55
    THIS            shift, and go to state 57
    READINTEGER     shift, and go to state 60
    READLINE        shift, and go to state 61
    INSTANCEOF      shift, and go to state 62
    NOT_OP          shift, and go to state 63
    IDENTIFIER      shift, and go to state 64
    STRING_LITERAL  shift, and go to state 65
    INTCONSTANT     shift, and go to state 66
    DOUBLECONSTANT  shift, and go to state 67
    BOOLCONSTANT    shift, and go to state 68
    '-'             shift, and go to state 69
    '('             shift, and go to state 70

    $default  reduce using rule 46 (Actuals)

    LValue    go to state 90
    Call      go to state 91
    Actuals   go to state 174
    ExprList  go to state 136
    Expr      go to state 131
    Constant  go to state 84


State 167

   50 ForStmt: FOR '(' SimpleStmt ';' BoolExpr . ';' SimpleStmt ')' Stmt

    ';'  shift, and go to state 175


State 168

   52 IfStmt: IF '(' BoolExpr ')' Stmt .
   53       | IF '(' BoolExpr ')' Stmt . ELSE Stmt

    ELSE  shift, and go to state 176

    $default  reduce using rule 52 (IfStmt)


State 169

   82 Expr: NEW Type '[' Expr ']' .

    $default  reduce using rule 82 (Expr)


State 170

   51 WhileStmt: WHILE '(' BoolExpr ')' Stmt .

    $default  reduce using rule 51 (WhileStmt)


State 171

   42 LValue: Expr . '.' IDENTIFIER
   43       | Expr . '[' Expr ']'
   45 Call: Expr . '.' IDENTIFIER '(' Actuals ')'
   49 ExprList: ExprList ',' Expr .
   64 Expr: Expr . '+' Expr
   65     | Expr . '-' Expr
   66     | Expr . '*' Expr
   67     | Expr . '/' Expr
   68     | Expr . '%' Expr
   70     | Expr . '<' Expr
   71     | Expr . LE_OP Expr
   72     | Expr . '>' Expr
   73     | Expr . GE_OP Expr
   74     | Expr . EQ_OP Expr
   75     | Expr . NE_OP Expr
   76     | Expr . AND_OP Expr
   77     | Expr . OR_OP Expr

    LE_OP   shift, and go to state 108
    GE_OP   shift, and go to state 109
    EQ_OP   shift, and go to state 110
    NE_OP   shift, and go to state 111
    AND_OP  shift, and go to state 112
    OR_OP   shift, and go to state 113
    '<'     shift, and go to state 114
    '>'     shift, and go to state 115
    '+'     shift, and go to state 116
    '-'     shift, and go to state 117
    '*'     shift, and go to state 118
    '/'     shift, and go to state 119
    '%'     shift, and go to state 120
    '['     shift, and go to state 121
    '.'     shift, and go to state 122

    $default  reduce using rule 49 (ExprList)


State 172

   83 Expr: INSTANCEOF '(' Expr ',' IDENTIFIER . ')'

    ')'  shift, and go to state 177


State 173

   42 LValue: Expr . '.' IDENTIFIER
   43       | Expr . '[' Expr ']'
   45 Call: Expr . '.' IDENTIFIER '(' Actuals ')'
   64 Expr: Expr . '+' Expr
   65     | Expr . '-' Expr
   66     | Expr . '*' Expr
   67     | Expr . '/' Expr
   68     | Expr . '%' Expr
   70     | Expr . '<' Expr
   71     | Expr . LE_OP Expr
   72     | Expr . '>' Expr
   73     | Expr . GE_OP Expr
   74     | Expr . EQ_OP Expr
   75     | Expr . NE_OP Expr
   76     | Expr . AND_OP Expr
   77     | Expr . OR_OP Expr
   84     | '(' CLASS IDENTIFIER ')' Expr .

    $default  reduce using rule 84 (Expr)


State 174

   45 Call: Expr '.' IDENTIFIER '(' Actuals . ')'

    ')'  shift, and go to state 178


State 175

   50 ForStmt: FOR '(' SimpleStmt ';' BoolExpr ';' . SimpleStmt ')' Stmt

    NULLCONSTANT    shift, and go to state 51
    NEW             shift, and go to state 55
    THIS            shift, and go to state 57
    READINTEGER     shift, and go to state 60
    READLINE        shift, and go to state 61
    INSTANCEOF      shift, and go to state 62
    NOT_OP          shift, and go to state 63
    IDENTIFIER      shift, and go to state 64
    STRING_LITERAL  shift, and go to state 65
    INTCONSTANT     shift, and go to state 66
    DOUBLECONSTANT  shift, and go to state 67
    BOOLCONSTANT    shift, and go to state 68
    '-'             shift, and go to state 69
    '('             shift, and go to state 70

    $default  reduce using rule 40 (SimpleStmt)

    SimpleStmt  go to state 179
    LValue      go to state 75
    Call        go to state 76
    Expr        go to state 83
    Constant    go to state 84


State 176

   53 IfStmt: IF '(' BoolExpr ')' Stmt ELSE . Stmt

    NULLCONSTANT    shift, and go to state 51
    BREAK           shift, and go to state 52
    FOR             shift, and go to state 53
    IF              shift, and go to state 54
    NEW             shift, and go to state 55
    RETURN          shift, and go to state 56
    THIS            shift, and go to state 57
    WHILE           shift, and go to state 58
    PRINT           shift, and go to state 59
    READINTEGER     shift, and go to state 60
    READLINE        shift, and go to state 61
    INSTANCEOF      shift, and go to state 62
    NOT_OP          shift, and go to state 63
    IDENTIFIER      shift, and go to state 64
    STRING_LITERAL  shift, and go to state 65
    INTCONSTANT     shift, and go to state 66
    DOUBLECONSTANT  shift, and go to state 67
    BOOLCONSTANT    shift, and go to state 68
    '-'             shift, and go to state 69
    '('             shift, and go to state 70
    '{'             shift, and go to state 45

    $default  reduce using rule 40 (SimpleStmt)

    StmtBlock   go to state 72
    Stmt        go to state 180
    SimpleStmt  go to state 74
    LValue      go to state 75
    Call        go to state 76
    ForStmt     go to state 77
    WhileStmt   go to state 78
    IfStmt      go to state 79
    ReturnStmt  go to state 80
    BreakStmt   go to state 81
    PrintStmt   go to state 82
    Expr        go to state 83
    Constant    go to state 84


State 177

   83 Expr: INSTANCEOF '(' Expr ',' IDENTIFIER ')' .

    $default  reduce using rule 83 (Expr)


State 178

   45 Call: Expr '.' IDENTIFIER '(' Actuals ')' .

    $default  reduce using rule 45 (Call)


State 179

   50 ForStmt: FOR '(' SimpleStmt ';' BoolExpr ';' SimpleStmt . ')' Stmt

    ')'  shift, and go to state 181


State 180

   53 IfStmt: IF '(' BoolExpr ')' Stmt ELSE Stmt .

    $default  reduce using rule 53 (IfStmt)


State 181

   50 ForStmt: FOR '(' SimpleStmt ';' BoolExpr ';' SimpleStmt ')' . Stmt

    NULLCONSTANT    shift, and go to state 51
    BREAK           shift, and go to state 52
    FOR             shift, and go to state 53
    IF              shift, and go to state 54
    NEW             shift, and go to state 55
    RETURN          shift, and go to state 56
    THIS            shift, and go to state 57
    WHILE           shift, and go to state 58
    PRINT           shift, and go to state 59
    READINTEGER     shift, and go to state 60
    READLINE        shift, and go to state 61
    INSTANCEOF      shift, and go to state 62
    NOT_OP          shift, and go to state 63
    IDENTIFIER      shift, and go to state 64
    STRING_LITERAL  shift, and go to state 65
    INTCONSTANT     shift, and go to state 66
    DOUBLECONSTANT  shift, and go to state 67
    BOOLCONSTANT    shift, and go to state 68
    '-'             shift, and go to state 69
    '('             shift, and go to state 70
    '{'             shift, and go to state 45

    $default  reduce using rule 40 (SimpleStmt)

    StmtBlock   go to state 72
    Stmt        go to state 182
    SimpleStmt  go to state 74
    LValue      go to state 75
    Call        go to state 76
    ForStmt     go to state 77
    WhileStmt   go to state 78
    IfStmt      go to state 79
    ReturnStmt  go to state 80
    BreakStmt   go to state 81
    PrintStmt   go to state 82
    Expr        go to state 83
    Constant    go to state 84


State 182

   50 ForStmt: FOR '(' SimpleStmt ';' BoolExpr ';' SimpleStmt ')' Stmt .

    $default  reduce using rule 50 (ForStmt)
